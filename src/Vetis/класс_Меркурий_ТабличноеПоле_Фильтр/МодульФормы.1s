
Перем Неопределено;

Перем КонтекстФормы;
Перем ИмяКнопки;
Перем ИмяНастройки;

Перем тзОтбор;

Перем МаксРазмерИсторииЗначения Экспорт;

Перем фНеСохранятьНастройкиФильтров Экспорт; //и не восстанавливать - нужно, когда настройки задаются явно извне
//===========================================================

//--------------------------------------------------------------------
/// События, которые нужно транслировать из формы в данный класс
///   - ПриНачалеВыбораЗначения(Имя, ФСО)
///   - _ПриОтжатииЛевойКнопки(Сост, Лево, Верх, ФСО)
///
///
//--------------------------------------------------------------------


Функция Сам(Конт)
	Возврат Конт;
КонецФункции

//_____________________________________________________________________________
//Находит строку ТЗ по указанной колонке и значению
//Возвращает 1 если строка найдена, и 0 в противном случае
Функция НайтиСтрокуТЗ(ТЗ, КолонкаПоиска, ЗначПоиска) Экспорт
    Перем н;
	Если ТЗ.НайтиЗначение(ЗначПоиска, н, КолонкаПоиска)=0 Тогда
		Возврат 0;
	КонецЕсли;
	ТЗ.ПолучитьСтрокуПоНомеру(н);
	Возврат 1;
КонецФункции

Функция СписокВСтроку(сз, Разделитель) Экспорт
	стр = ""; зпт = "";
	Для н = 1 По сз.РазмерСписка() Цикл
		Значение = сз.ПолучитьЗначение(н);
		Если ПустоеЗначение(Значение) = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		стр = стр + зпт + Значение;
		зпт = Разделитель;
	КонецЦикла;
	
	Возврат стр;
КонецФункции

///******************************** ADirks 25.11.2019 ************
Процедура Конструктор() Экспорт
	тзОтбор = СоздатьОбъект("ТаблицаЗначений");
	тзОтбор.НоваяКолонка("Пометка", "Число");
	тзОтбор.НоваяКолонка("Имя", "Строка");
	тзОтбор.НоваяКолонка("Представление", "Строка");
	тзОтбор.НоваяКолонка("Тип", "Строка");
	тзОтбор.НоваяКолонка("ТекущийТип", "Строка"); //актуально для составных типов (ДатаВСД)
	тзОтбор.НоваяКолонка("Владелец", "Строка");
	тзОтбор.НоваяКолонка("Значение");
	тзОтбор.НоваяКолонка("Значение_История");
	тзОтбор.НоваяКолонка("ВыражениеСКЛ", "Строка");
	тзОтбор.НоваяКолонка("ВыражениеДБФ", "Строка");
	тзОтбор.НоваяКолонка("ДжойнСКЛ", "Строка");
	тзОтбор.НоваяКолонка("ДжойнДБФ", "Строка");
	
	МаксРазмерИсторииЗначения = 15;
КонецПроцедуры
///******************************** ADirks 25.11.2019 ************

///******************************** ADirks 21.11.2019 ************
// Тип: тип значения фильтра. М.б. любым допустимым типом 1С, а также:
//    - 'Флаг' - в этом случае значение не редактируется
//    - 'ДатаВСД' - в этом случае значение м.б. типа Дата или Строка, регулируется галкой в колонке Представление
// Выражение: имя поля, по которому фильтруется табличка. Для типа 'Флаг' это д.б. булево SQL-выражение, например 'Спр.IsMark = 0'
// ДжойнСКЛ (ДБФ): SQL-выражение для соединения доп. таблиц, требующихся для данного фильта
Процедура Добавить(Имя, Представление, Тип, ВыражениеСКЛ, Знач ВыражениеДБФ = "", ДжойнСКЛ = "", ДжойнДБФ = "") Экспорт
	тзОтбор.НоваяСтрока();
	тзОтбор.Имя = Имя;
	тзОтбор.Представление = Представление;
	тзОтбор.Тип = Тип;
	Если Тип = "ДатаВСД" Тогда
		тзОтбор.ТекущийТип = "Дата";
	КонецЕсли;
	тзОтбор.ВыражениеСКЛ = ВыражениеСКЛ;
	
	Если ВыражениеДБФ = "" Тогда
		ВыражениеДБФ = СтрЗаменить(ВыражениеСКЛ, "$", "");
	КонецЕсли;
	тзОтбор.ВыражениеДБФ = ВыражениеДБФ;
	
	тзОтбор.ДжойнСКЛ = ДжойнСКЛ;
	тзОтбор.ДжойнДБФ = ДжойнДБФ;
КонецПроцедуры

///******************************** ADirks 25.11.2019 ************
Функция Владелец(Имя, Владелец_Имя = -1) Экспорт
	Если НайтиСтрокуТЗ(тзОтбор, "Имя", Имя) = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Владелец_Имя <> -1 Тогда
		тзОтбор.Владелец = Владелец_Имя;
	КонецЕсли;
	
	Возврат тзОтбор.Владелец;
КонецФункции
///******************************** ADirks 25.11.2019 ************

///******************************** ADirks 25.11.2019 ************
Функция Пометка(Имя, НовЗнач = -1) Экспорт
	Сам = Сам(Контекст);
	
	Если НайтиСтрокуТЗ(тзОтбор, "Имя", Имя) = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если НовЗнач <> -1 Тогда
		тзОтбор.Пометка = НовЗнач;
		Сам.ОбновитьСтроки();
	КонецЕсли;

	Возврат тзОтбор.Пометка;
КонецФункции
///******************************** ADirks 25.11.2019 ************

///******************************** ADirks 27.11.2019 ************
Функция Представление(Имя, НовЗнач = -1) Экспорт
	Сам = Сам(Контекст);
	
	Если НайтиСтрокуТЗ(тзОтбор, "Имя", Имя) = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если НовЗнач <> -1 Тогда
		тзОтбор.Представление = НовЗнач;
		Сам.ОбновитьСтроки();
	КонецЕсли;

	Возврат тзОтбор.Представление;
КонецФункции
///******************************** ADirks 27.11.2019 ************

///******************************** ADirks 06.12.2019 ************
Процедура MRU_Добавить(Значение, Имя = -1)
	Сам = Сам(Контекст);
	
	Если ПустоеЗначение(Значение) = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Если Имя <> -1 Тогда
		Если Сам.НайтиСтрокуТЗ(тзОтбор, "Имя", Имя) = 0 Тогда
			Возврат;
		КонецЕсли;
		нСтр = тзОтбор.НомерСтроки;
	Иначе
		нСтр = Сам.ТекущаяСтрока;
	КонецЕсли;
	
	Если ПустоеЗначение(нСтр) = 1 Тогда
		Возврат;
	КонецЕсли;
	
	
	тзОтбор.ПолучитьСтрокуПоНомеру(нСтр);
	сзИстория = тзОтбор.Значение_История;
	Если сзИстория = Неопределено Тогда
		сзИстория = СоздатьОбъект("СписокЗначений");
	КонецЕсли;
	
	нЗн = сзИстория.НайтиЗначение(Значение);
	Если нЗн = 0 Тогда
		сзИстория.ВставитьЗначение(1, Значение);
		Пока сзИстория.РазмерСписка() > МаксРазмерИсторииЗначения Цикл
			сзИстория.УдалитьЗначение(сзИстория.РазмерСписка());
		КонецЦикла;
	Иначе
		сзИстория.СдвинутьЗначение(-(нЗн-1), нЗн);
	КонецЕсли;
	
	тзОтбор.Значение_История = сзИстория;
КонецПроцедуры
///******************************** ADirks 06.12.2019 ************

///******************************** ADirks 06.12.2019 ************
Процедура MRU_Выбрать(Имя)
	Сам = Сам(Контекст);
	Если Сам.НайтиСтрокуТЗ(тзОтбор, "Имя", Имя) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	сзИстория = тзОтбор.Значение_История;
	Если сзИстория = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Зн = "";
	Если сзИстория.ВыбратьЗначение(Зн,,,, 0) <> 1 Тогда
		Возврат;
	КонецЕсли;
	
	
	Сам.Значение(Имя, Зн);
	Сам.УстановитьОтбор();
КонецПроцедуры
///******************************** ADirks 06.12.2019 ************

///******************************** ADirks 06.12.2019 ************
Функция сзИсторияЗначения(Имя) Экспорт
	Сам = Сам(Контекст);
	
	Если НайтиСтрокуТЗ(тзОтбор, "Имя", Имя) = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат тзОтбор.Значение_История;
КонецФункции
///******************************** ADirks 06.12.2019 ************


///******************************** ADirks 25.11.2019 ************
Функция Значение(Имя, НовЗнач = -9999999) Экспорт
	Сам = Сам(Контекст);
	
	Если НайтиСтрокуТЗ(тзОтбор, "Имя", Имя) = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Тип = тзОтбор.Тип;
	
	Если НовЗнач <> -9999999 Тогда
		тзОтбор.Значение = НовЗнач;
		
		Если Тип = "ДатаВСД" Тогда
			Если ТипЗначенияСтр(тзОтбор.Значение) = "Дата" Тогда
				тзОтбор.ТекущийТип = "Дата";
			Иначе
				тзОтбор.ТекущийТип = "Строка";
			КонецЕсли;
		КонецЕсли;

		Если ПустоеЗначение(НовЗнач) = 0 Тогда
			тзОтбор.Пометка = 1;
		Иначе
			тзОтбор.Пометка = 0;
		КонецЕсли;
		
		MRU_Добавить(НовЗнач, Имя);
	КонецЕсли;
	
	Значение = тзОтбор.Значение;
	Если Значение = Неопределено Тогда
		Если Тип = "ДатаВСД" Тогда
			Тип = тзОтбор.ТекущийТип;
		КонецЕсли;
		Значение = ПолучитьПустоеЗначение(Тип);
	КонецЕсли;
	
	Если Сам.фПоказано() = 1 Тогда
		Сам.ОбновитьСтроки();
	КонецЕсли;

	Возврат Значение;
КонецФункции
///******************************** ADirks 25.11.2019 ************


///******************************** ADirks 25.11.2019 ************
Процедура Инит(Конт, ИмяКонтрола, ПрефиксНастроек) Экспорт
	Сам = Сам(Контекст);
	База = Сам.ПолучитьБазовыйКласс(); //:Меркурий.ТабличноеПоле.ТЗ
	
	КонтекстФормы = Конт;
	ИмяКнопки = ИмяКонтрола;
	
	База.Инит(Конт, ИмяКонтрола);
	База.ИмяНастройки = ПрефиксНастроек+"_тпОтбор";
	
	ИмяНастройки = ПрефиксНастроек+"_Значения";
	
	База.ДобавитьКолонку("Пометка", "Вкл.",,, 5);
	База.ДобавитьКолонку("Представление", "Имя",,, 50);
	База.ДобавитьКолонку("Значение",,,, 50);
	База.ДобавитьКолонку("Значение_История", "...",,, 5);
	
	База.ДобавитьФлажок("Пометка");
	
	База.УстановитьПоставщикаДанных(тзОтбор);
КонецПроцедуры
///******************************** ADirks 25.11.2019 ************

///******************************** ADirks 25.11.2019 ************
Функция фЕстьФильтр() Экспорт
	Если тзОтбор.Итог("Пометка") = 0 Тогда
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции
///******************************** ADirks 25.11.2019 ************

///******************************** ADirks 22.11.2019 ************
//пусть будет Экспорт, может кому-то пригодится
Функция тзп_ФильтрПоСтроке(ИмяПоля, Значение) Экспорт
	сзФильтр = СоздатьОбъект("СписокЗначений");
	Значение = СокрЛП(Значение);
	мнСтрока = СтрЗаменить(Значение, " ", РазделительСтрок);
	нСтрок = СтрКоличествоСтрок(мнСтрока);
	Для нСтр = 1 По нСтрок Цикл
		стр = СтрПолучитьСтроку(мнСтрока, нСтр);
		Если ПустаяСтрока(стр) = 0 Тогда
			сзФильтр.ДобавитьЗначение(ИмяПоля+" like '%"+стр+"%'");
		КонецЕсли;
	КонецЦикла;
	
	Если сзФильтр.РазмерСписка() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат "("+СписокВСтроку(сзФильтр, " AND ")+")";
КонецФункции
///******************************** ADirks 22.11.2019 ************

///******************************** ADirks 25.11.2019 ************
Функция JOIN() Экспорт
	ЭтоSQL = ГМ.ЭтоSQL;
	сзДжойны = СоздатьОбъект("СписокЗначений");

	тзОтбор.ВыбратьСтроки();
	Пока тзОтбор.ПолучитьСтроку() = 1 Цикл
		Если тзОтбор.Пометка <> 1 Тогда
			Продолжить;
		КонецЕсли;

		Если ЭтоSQL = 1 Тогда
			Джойн = тзОтбор.ДжойнСКЛ;
		Иначе
			Джойн = тзОтбор.ДжойнДБФ;
		КонецЕсли;
		
		Если ПустоеЗначение(Джойн) = 0 Тогда
			сзДжойны.ДобавитьЗначение(Джойн);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокВСтроку(сзДжойны, РазделительСтрок+СимволТабуляции);
КонецФункции

Функция тзп_ВсеФильтры() Экспорт
	ЭтоSQL = ГМ.ЭтоSQL;
	МД = СоздатьОбъект("MetaDataWork");
	сзФильтры = СоздатьОбъект("СписокЗначений");
	
	тзОтбор.ВыбратьСтроки();
	Пока тзОтбор.ПолучитьСтроку() = 1 Цикл
		Если тзОтбор.Пометка <> 1 Тогда
			Продолжить;
		КонецЕсли;

		Тип = тзОтбор.Тип;
		Значение = тзОтбор.Значение;
		Если ЭтоSQL = 1 Тогда
			Выражение = тзОтбор.ВыражениеСКЛ;
		Иначе
			Выражение = тзОтбор.ВыражениеДБФ;
		КонецЕсли;

		Если Тип = "Флаг" Тогда
			//в данном случае ваыражение и является фильтром
			сзФильтры.ДобавитьЗначение(Выражение);
			
		ИначеЕсли Тип = "Строка" Тогда
			Фильтр = тзп_ФильтрПоСтроке(Выражение, Значение);
			
		ИначеЕсли Тип = "Дата" Тогда
			
		ИначеЕсли Тип = "ДатаВСД" Тогда
			ТекущийТип = тзОтбор.ТекущийТип;
			Если ТекущийТип = "Дата" Тогда
				стрДата = ГМ.Преобразовать_Дата_в_Строка(Значение);
				Фильтр = Выражение+" like '"+стрДата+"%'";
			ИначеЕсли ТекущийТип = "Строка" Тогда
				стрДата = СокрЛП(Значение);
				Фильтр = тзп_ФильтрПоСтроке(Выражение, стрДата);
			КонецЕсли;
			//Фильтр = Выражение+" >= '"+стрДата+"'";
			
		Иначе
			Значение = "'"+МД.ЗначениеВСтрокуБД(Значение)+"'";
			Если Найти(Выражение, "<Значение>") = 0 Тогда
				Фильтр = Выражение+" = "+Значение;
			Иначе
				Фильтр = СтрЗаменить(Выражение, "<Значение>", Значение);
			КонецЕсли;
		КонецЕсли;
		
		Если ПустоеЗначение(Значение) = 0 Тогда
			сзФильтры.ДобавитьЗначение(Фильтр);
		КонецЕсли;
	КонецЦикла;

	Возврат СписокВСтроку(сзФильтры, РазделительСтрок+СимволТабуляции+"AND ");
КонецФункции


Функция WHERE() Экспорт
	тзп_ВсеФильтры = тзп_ВсеФильтры();
	WHERE = "";
	Если ПустаяСтрока(тзп_ВсеФильтры) = 0 Тогда
		WHERE = "WHERE
		|"+тзп_ВсеФильтры;
	КонецЕсли;
	
	Возврат WHERE;
КонецФункции
///******************************** ADirks 25.11.2019 ************

///******************************** ADirks 25.11.2019 ************
Процедура СохранитьНастройки() Экспорт
	Сам = Сам(Контекст);
	База = Сам.ПолучитьБазовыйКласс();
	
	База.СохранитьНастройки();
	
	Если фНеСохранятьНастройкиФильтров <> 1 Тогда
		ЗначениеВФайл(КаталогПользователя()+ИмяНастройки+".txt", тзОтбор);
	КонецЕсли;
КонецПроцедуры
///******************************** ADirks 25.11.2019 ************

///******************************** ADirks 25.11.2019 ************
Процедура ВосстановитьНастройки() Экспорт
	Сам = Сам(Контекст);
	База = Сам.ПолучитьБазовыйКласс();
	
	База.ВосстановитьНастройки();


	Если фНеСохранятьНастройкиФильтров = 1 Тогда
		Возврат;
	КонецЕсли;
	
	ВремТЗ = "";
	ЗначениеИзФайла(КаталогПользователя()+ИмяНастройки+".txt", ВремТЗ);
	Если ТипЗначенияСтр(ВремТЗ) = "ТаблицаЗначений" Тогда
		ВремТЗ.ВыбратьСтроки();
		Пока ВремТЗ.ПолучитьСтроку() = 1 Цикл
			Имя = "";
			Попытка
				Имя = ВремТЗ.Имя;
			Исключение
				Попытка
					Имя = ВремТЗ.Элемент;
				Исключение
				КонецПопытки;
			КонецПопытки;
			
			Если Имя = "" Тогда
				Продолжить;
			КонецЕсли;
			
			Если НайтиСтрокуТЗ(тзОтбор, "Имя", Имя) = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Попытка
				Сам.Значение(Имя, ВремТЗ.Значение);
			Исключение
			КонецПопытки;
			
			Если тзОтбор.Тип = "ДатаВСД" Тогда
				Если ТипЗначенияСтр(тзОтбор.Значение) = "Строка" Тогда
					тзОтбор.ТекущийТип = "Строка";
				Иначе
					тзОтбор.ТекущийТип = "Дата";
				КонецЕсли;
			КонецЕсли;
			
			Попытка
				Сам.Пометка(Имя, ВремТЗ.Пометка);
			Исключение
			КонецПопытки;
			
			Попытка
				Если ТипЗначенияСтр(ВремТЗ.Значение_История) = "СписокЗначений" Тогда
					тзОтбор.Значение_История = ВремТЗ.Значение_История;
				КонецЕсли;
			Исключение
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;       
КонецПроцедуры
///******************************** ADirks 25.11.2019 ************

///******************************** ADirks 25.11.2019 ************
Процедура УстановитьОтбор() Экспорт
	Сам = Сам(Контекст); //:Меркурий.ТабличноеПоле.ТЗ

	Коллбэк_УстановитьОтбор = Сам.ИмяОбработчикаСобытия(ИмяКнопки, "УстановитьОтбор");
	Если ПустаяСтрока(Коллбэк_УстановитьОтбор) = 0 Тогда
		оСервис = СоздатьОбъект("Сервис");
		сзАрг = СоздатьОбъект("СписокЗначений");
		оСервис.ВыполнитьПроцедуру(КонтекстФормы, Коллбэк_УстановитьОтбор, сзАрг);
	КонецЕсли;
КонецПроцедуры
///******************************** ADirks 25.11.2019 ************

///******************************** ADirks 25.11.2019 ************
Процедура ПриВыводеСтроки(ОформлениеСтроки, ДанныеСтроки, ТипРегиона) Экспорт
	//ОформлениеСтроки//:ОформлениеСтроки

	Сам = Сам(Контекст);
	База = Сам.ПолучитьБазовыйКласс();

	База.ПриВыводеСтроки(ОформлениеСтроки, ДанныеСтроки, ТипРегиона);
	
	Если ДанныеСтроки.Пометка = 1 Тогда
		ОформлениеСтроки.Шрифт = Сам.жЫрныйШрифт();
	КонецЕсли;
	
	Если ДанныеСтроки.Тип = "ДатаВСД" Тогда
		Яч = ОформлениеСтроки.Ячейки.Представление; //:ОформлениеЯчейки
		Яч.ОтображатьФлажок = 1;
		Если ДанныеСтроки.ТекущийТип = "Дата" Тогда
			Яч.ЗначениеФлажка = 1;
			Яч.Текст = Яч.Текст + "  (дата)";
		Иначе
			Яч.ЗначениеФлажка = 0;
			Яч.Текст = Яч.Текст + "  (строка)";
		КонецЕсли;
	КонецЕсли;
	
	Если ДанныеСтроки.Тип = "Флаг" Тогда
		//история не нужна
	Иначе
		Яч = ОформлениеСтроки.Ячейки.Значение_История;
		Яч.Текст = "...";
		Яч.Шрифт = Сам.жЫрныйШрифт();
	КонецЕсли;
КонецПроцедуры
///******************************** ADirks 25.11.2019 ************


///******************************** ADirks 25.11.2019 ************
Функция ПриВыбореФлажка(СтрТП, КолТП, ТипРегиона) Экспорт
	Сам = Сам(Контекст);
	База = Сам.ПолучитьБазовыйКласс();
	База.ПриВыбореФлажка(СтрТП, КолТП, ТипРегиона);
	
	фОбновитьОтбор = 1;
	
	ИмяКол = КолТП.Имя;
	ТД = Сам.ТекущиеДанные;
	Тип = ТД.Тип;
	ТекущийТип = ТД.ТекущийТип;
	Если ИмяКол = "Представление" Тогда
		Если Тип = "ДатаВСД" Тогда
			фОбновитьОтбор = 0;
			
			Значение = ТД.Значение;
			Если ТекущийТип = "Дата" Тогда
				ТекущийТип = "Строка";
				НовЗнач = ГМ.Преобразовать_Дата_в_Строка(Значение);
			Иначе
				ТекущийТип = "Дата";
				НовЗнач = ГМ.Преобразовать_СтрокаДата_в_Дата(Значение);
			КонецЕсли;
			
			Сам.Установить("ТекущийТип", ТекущийТип);
			Сам.Установить("Значение", НовЗнач);
			Сам.ОбновитьСтроки();
		КонецЕсли;
	КонецЕсли;
	
	Если фОбновитьОтбор = 1 Тогда
		Сам.УстановитьОтбор();
	КонецЕсли;
	
	Возврат 1;
КонецФункции
///******************************** ADirks 25.11.2019 ************

Функция ПриНачалеВыбораЗначения(Имя, ФСО) Экспорт
	Сам = Сам(Контекст);
	
	Если Имя = "_тпОтбор_Значение_" Тогда
		Владелец_Имя = Сам.Получить("Владелец");
		Если ПустоеЗначение(Владелец_Имя) = 0 Тогда
			Владелец_Значение = Сам.Значение(Владелец_Имя);	
			Если ПустоеЗначение(Владелец_Значение) = 0 Тогда
				Значение = КонтекстФормы._тпОтбор_Значение_;
				ВидСпр = Значение.Вид();
				Парам = "";
				ОткрытьФорму("Справочник."+ВидСпр, Парам);
				Парам.ИспользоватьВладельца(Владелец_Значение);
				Парам.АктивизироватьОбъект(Значение);
			Иначе
				Сообщить("Выберите значение фильтра <"+Владелец_Имя+">!");
			КонецЕсли;
			ФСО = 0;                    
		КонецЕсли;
		Возврат 1;
	КонецЕсли;
	
	Возврат 0;
КонецФункции


Процедура ПриРедактированииЗначения(Стр, Колонка, ТипРегиона, __знач) Экспорт
	Сам = Сам(Контекст);
	База = Сам.ПолучитьБазовыйКласс();
	
	Если ТипЗначенияСтр(__знач) = "Строка" Тогда
		__знач = СокрП(__знач);
	КонецЕсли;
	
	База.ПриРедактированииЗначения(Стр, Колонка, ТипРегиона, __знач);

	Если ТипРегиона = 3 Тогда
		КодКолонки = Колонка.Данные;

		Если КодКолонки = "Значение" Тогда
			Если ПустоеЗначение(__знач) = 1 Тогда
				Сам.УстановитьЗначение(Стр, "Пометка", 0);
			Иначе
				Сам.УстановитьЗначение(Стр, "Пометка", 1);
			КонецЕсли;
			MRU_Добавить(__знач, Сам.ПолучитьЗначение(Стр, "Имя"));
			Сам.ОбновитьСтроки();
			Сам.УстановитьОтбор();
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры


///******************************** ADirks 25.11.2019 ************
Процедура Выбор(нСтр, КолонкаТП, ТипРегиона) Экспорт
	Сам = Сам(Контекст);
	ТД = Сам.ТекущиеДанные;

	ИмяКол = КолонкаТП.Имя;
	
	Имя = ТД.Имя;
	Тип = ТД.Тип;
	Если Тип = "ДатаВСД" Тогда
		Тип = ТД.ТекущийТип;
	КонецЕсли;

	Если ТипРегиона <> 3 Тогда
		Возврат;
		
	ИначеЕсли (ИмяКол = "Пометка") ИЛИ (Тип = "Флаг") Тогда
		Пометка = Сам.Пометка(Имя);
		Сам.Пометка(Имя, 1-Пометка);
		Сам.УстановитьОтбор();
		
	ИначеЕсли ИмяКол = "Значение" Тогда
		_знач = Сам.ТекущиеДанные.Значение;
		Если ТипЗначенияСтр(_знач) <> Тип Тогда
			_знач = ПолучитьПустоеЗначение(Тип);
		КонецЕсли;
		
		тпБаза = Сам.ПолучитьБазовыйКласс("ТабличноеПоле");
		тпБаза.РедактироватьЗначение(нСтр, КолонкаТП, ТипРегиона, _знач,50,0, "_тпОтбор_Значение_", "0x0x00000020"); //0x00000200
	КонецЕсли;
КонецПроцедуры
///******************************** ADirks 25.11.2019 ************

///******************************** ADirks 06.12.2019 ************
Функция _ПриОтжатииЛевойКнопки(Сост, Лево, Верх, ФСО) Экспорт
	Перем чЛево, чВерх, чПраво, чНиз;
	
	Сам = Сам(Контекст);
	
	Если Сам.фАктивныйЭлемент() = 1 Тогда
		рез = Сам.ПолучитьГраницыТекущейЯчейки(чЛево, чВерх, чПраво, чНиз, 1);
		Если рез <> 1 Тогда
			Возврат 0;
		КонецЕсли;
		
		нСтр = Сам.ТекущаяСтрока;
		Кол = Сам.ТекущаяКолонка;
		Если ПустоеЗначение(нСтр) = 1 Тогда
			Возврат 0;
		ИначеЕсли ПустоеЗначение(Кол) = 1 Тогда
			Возврат 0;
		ИначеЕсли Кол.Имя <> "Значение_История" Тогда
			Возврат 0;
		КонецЕсли;
		
		тзОтбор.ПолучитьСтрокуПоНомеру(нСтр);
		Если тзОтбор.Тип = "Флаг" Тогда
			Возврат 1;
		КонецЕсли;
		
		Если (чЛево <= Лево) И (Лево <= чПраво) Тогда
			Если (чВерх <= Верх) И (Верх <= чНиз) Тогда
				MRU_Выбрать(тзОтбор.Имя);
				Возврат 1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 0;
КонецФункции
///******************************** ADirks 06.12.2019 ************

