Перем ВыбФирма,Отправитель_ХозСубъект Экспорт;
Перем оПривязки; //:Меркурий.Привязки
Перем тпПартий, тзПартий;
Перем СтрокаСортировки;
Перем тзОтбор, тпОтбор, УстановленОтбор;

//======================================================================

Процедура УстановитьОтбор()
	
	Если ГМ.ЭтоSQL = 1 Тогда
		ТекстЗапроса = "
			|SELECT 
			|	ВСД_Продукция_Элемент.DESCR
			|	, ВСД_Партия.code as Код
			|	, ВСД_Партия.ID as [ВСД_Партия $Справочник.ВСД_Партия]
			|	, $ВСД_Партия.Продукция_Элемент as [Продукция_Элемент $Справочник.ВСД_Продукция_Элемент]
			|	, $ВСД_Партия.Количество as [Количество]
			|	, $ВСД_Партия.ДатаИзготовления1 as [Изготовлено]
			|	, $ВСД_Партия.ДатаСрокГодности1 as [ГоденДо]
			|	, $ВСД_Партия.ДатаСрокГодности2 as [ГоденДо2]
			|	, $ВСД_Партия.НомерПартии as [НомерПартии]
			|	, $ВСД_Партия.ЕдиницаИзмерения as [Единица $Справочник.ВСД_ЕдиницыИзмерения]
			|	, $ВСД_Партия.Производитель_Площадка as [Производитель_Площадка $Справочник.ВСД_Площадка]
			|	, $ВСД_Партия.Получатель_Площадка as [Получатель_Площадка $Справочник.ВСД_Площадка]
			|	, $ВСД_Партия.НомерЗаписи as [НомерЗаписи]
			|	, $ВСД_Партия.ВсдДата as [Дата]
			|	, $ВСД_Партия.Статус as [Статус]
			|	, $ВСД_Партия.Продукция as [Продукция $Справочник.ВСД_Продукция] 
			|	, 0 [Пометка] 
			|	, $ПустойИД [Документ $Документ.ВСД2_Инвентаризация] 
			|FROM $Справочник.ВСД_Партия as ВСД_Партия
			|	INNER JOIN $Справочник.ВСД_Продукция_Элемент as ВСД_Продукция_Элемент ON ВСД_Продукция_Элемент.ID = $ВСД_Партия.Продукция_Элемент";
	Иначе
		ТекстЗапроса = "
			|SELECT ВСД_Партия.ID as [ВСД_Партия :Справочник.ВСД_Партия]
			|	, ВСД_Партия.code as Код
			|	, ВСД_Партия.Продукция_Элемент as [Продукция_Элемент $Справочник.ВСД_Продукция_Элемент]
			|	, ВСД_Партия.Количество as [Количество]
			|	, ВСД_Партия.ДатаИзготовления1 as [Изготовлено]
			|	, ВСД_Партия.ДатаСрокГодности1 as [ГоденДо]
			|	, ВСД_Партия.ДатаСрокГодности2 as [ГоденДо2]
			|	, ВСД_Партия.НомерПартии as [НомерПартии]
			|	, ВСД_Партия.ЕдиницаИзмерения as [Единица $Справочник.ВСД_ЕдиницыИзмерения]
			|	, ВСД_Партия.Производитель_Площадка as [Производитель_Площадка $Справочник.ВСД_Площадка]
			|	, ВСД_Партия.Получатель_Площадка as [Получатель_Площадка $Справочник.ВСД_Площадка]
			|	, ВСД_Партия.НомерЗаписи as [НомерЗаписи]
			|	, ВСД_Партия.ВсдДата as [Дата]
			|	, ВСД_Партия.Статус as [Статус]
			|	, ВСД_Партия.Продукция as [Продукция $Справочник.ВСД_Продукция] 
			|	, 0 [Пометка] 
			|	, :ПустойИД [Документ $Документ.ВСД2_Инвентаризация] 
			|FROM [Справочник.ВСД_Партия] as ВСД_Партия
			|	INNER JOIN [Справочник.ВСД_Продукция_Элемент] as ВСД_Продукция_Элемент ON ВСД_Продукция_Элемент.ID = ВСД_Партия.Продукция_Элемент";
	КонецЕсли;
	
	МД = СоздатьОбъект("MetaDataWork");                                        
	Если ПустоеЗначение(Отправитель_ХозСубъект) = 0 Тогда
		СтрокаУсловий = "$ВСД_Партия.Получатель_ХозСубъект = '"+МД.ЗначениеВСтрокуБД(Отправитель_ХозСубъект)+"' AND "; ЕстьУсловие = 1; 
	Иначе
		СтрокаУсловий = ""; ЕстьУсловие = 0;
	КонецЕсли;     
	//СтрокаУсловий= СтрокаУсловий+"( $ВСД_Партия.Количество>0 ) AND ";
	ЕстьУсловие = 1;
	
	тзОтбор.ВыбратьСтроки();
	Пока тзОтбор.ПолучитьСтроку() = 1 Цикл
		Если тзОтбор.Пометка = 1 Тогда
			СтрокаПоиска = тзОтбор.Значение;
			Если тзОтбор.Элемент = "Только актуальные" Тогда
				СтрокаУсловий = СтрокаУсловий + "$ВСД_Партия.Количество > 0 AND ";
				Если ГМ.ЭтоSQL = 1 Тогда
					СтрокаУсловий = СтрокаУсловий + "(ВСД_Партия.IsMark = 0) AND ";
				Иначе
					СтрокаУсловий = СтрокаУсловий + "(ВСД_Партия.ISMARK = '') AND ";
				КонецЕсли;
				ЕстьУсловие = 1;
			ИначеЕсли тзОтбор.Элемент = "Наименование" Тогда
				Пока Найти(СтрокаПоиска, "  ")>0 Цикл
					СтрокаПоиска = СокрЛП(СтрЗаменить(СтрокаПоиска, "  ", " "));
				КонецЦикла;
				
				мнСтрокаПоиска = СтрЗаменить(СтрокаПоиска, " ", РазделительСтрок);
				Для х=1 По СтрКоличествоСтрок(мнСтрокаПоиска) Цикл
					ПодСтрокаП = СтрПолучитьСтроку(мнСтрокаПоиска, х);
					Если ПустаяСтрока(ПодСтрокаП) = 0 Тогда
						Если ГМ.ЭтоSQL = 1 Тогда
							СтрокаУсловий = СтрокаУсловий + "LOWER(ВСД_Продукция_Элемент.DESCR) LIKE '%"+ПодСтрокаП+"%' AND ";
						Иначе
							СтрокаУсловий = СтрокаУсловий + "ВСД_Продукция_Элемент.DESCR LIKE '%"+ПодСтрокаП+"%' AND ";
						КонецЕсли;
						ЕстьУсловие = 1;
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли тзОтбор.Элемент = "Продукция_Элемент" Тогда
				СтрокаУсловий = СтрокаУсловий + "ВСД_Продукция_Элемент.ID = '"+МД.ЗначениеВСтрокуБД(СтрокаПоиска)+"' AND ";
				ЕстьУсловие = 1; 
			ИначеЕсли тзОтбор.Элемент ="Дата изготовления" Тогда

				//преобразуем дату к правильную строку				
				мнСтрокаПоиска = СтрЗаменить(СокрЛП(СтрокаПоиска), ".", РазделительСтрок);
				ПодСтрокаП = "";
				СЦ = СтрКоличествоСтрок(мнСтрокаПоиска);
				Пока СЦ > 0 Цикл
					ВремСтр = СтрПолучитьСтроку(мнСтрокаПоиска, СЦ);
					Если СЦ = 3 Тогда
						Если СтрДлина(ВремСтр) = 2 Тогда
							ВремСтр = "20"+ВремСтр;
						КонецЕсли;
					КонецЕсли;
					ПодСтрокаП = ПодСтрокаП + ВремСтр + "-";
					СЦ = СЦ - 1;
				КонецЦикла; 
				ПодСтрокаП = Лев(ПодСтрокаП,10);                                        
				
				Если тзОтбор.ВыборДаты =0 Тогда  
					//фильтр по строке
					СтрокаУсловий = СтрокаУсловий + "($ВСД_Партия.ДатаИзготовления1 LIKE '%"+ПодСтрокаП+"%' ) AND ";
					ЕстьУсловие = 1;
				
				Иначе
					//фильтр по дате
					СтрокаУсловий = СтрокаУсловий + " $ВСД_Партия.ДатаИзготовления1 <= '"+ПодСтрокаП+"' AND ";
					ЕстьУсловие = 1;
				КонецЕсли;
				
			ИначеЕсли тзОтбор.Элемент ="Годен до" Тогда
				
				//преобразуем дату к правильную строку				
				мнСтрокаПоиска = СтрЗаменить(СокрЛП(СтрокаПоиска), ".", РазделительСтрок);
				ПодСтрокаП = "";
				СЦ = СтрКоличествоСтрок(мнСтрокаПоиска);
				Пока СЦ > 0 Цикл
					ВремСтр = СтрПолучитьСтроку(мнСтрокаПоиска, СЦ);
					Если СЦ = 3 Тогда
						Если СтрДлина(ВремСтр) = 2 Тогда
							ВремСтр = "20"+ВремСтр;
						КонецЕсли;
					КонецЕсли;
					ПодСтрокаП = ПодСтрокаП + ВремСтр + "-";
					СЦ = СЦ - 1;
				КонецЦикла; 
				
				Если тзОтбор.ВыборДаты =0 Тогда  
					СтрокаУсловий = СтрокаУсловий + "($ВСД_Партия.ДатаСрокГодности1 LIKE '%"+ПодСтрокаП+"%' ) AND ";
					ЕстьУсловие = 1;
				Иначе					
					СтрокаУсловий = СтрокаУсловий + "$ВСД_Партия.ДатаСрокГодности1 <= '"+ПодСтрокаП+"' AND ";
					ЕстьУсловие = 1;
				КонецЕсли;
				
			ИначеЕсли тзОтбор.Элемент ="Годен до2" Тогда

				//преобразуем дату к правильную строку				
				мнСтрокаПоиска = СтрЗаменить(СокрЛП(СтрокаПоиска), ".", РазделительСтрок);
				ПодСтрокаП = "";
				СЦ = СтрКоличествоСтрок(мнСтрокаПоиска);
				Пока СЦ > 0 Цикл
					ВремСтр = СтрПолучитьСтроку(мнСтрокаПоиска, СЦ);
					Если СЦ = 3 Тогда
						Если СтрДлина(ВремСтр) = 2 Тогда
							ВремСтр = "20"+ВремСтр;
						КонецЕсли;
					КонецЕсли;
					ПодСтрокаП = ПодСтрокаП + ВремСтр + "-";
					СЦ = СЦ - 1;
				КонецЦикла; 
				
				Если тзОтбор.ВыборДаты =0 Тогда  
					СтрокаУсловий = СтрокаУсловий + "($ВСД_Партия.ДатаСрокГодности2 LIKE '%"+ПодСтрокаП+"%' ) AND ";
					ЕстьУсловие = 1;
				Иначе
					СтрокаУсловий = СтрокаУсловий + "$ВСД_Партия.ДатаСрокГодности2 <= '"+ПодСтрокаП+"' AND ";
					ЕстьУсловие = 1;
				КонецЕсли;
				
			ИначеЕсли тзОтбор.Элемент = "Продукция" Тогда
				СтрокаУсловий = СтрокаУсловий + "$ВСД_Продукция_Элемент.Продукция = '"+МД.ЗначениеВСтрокуБД(СтрокаПоиска)+"' AND ";
				ЕстьУсловие = 1;
			ИначеЕсли тзОтбор.Элемент = "Вид продукции" Тогда
				СтрокаУсловий = СтрокаУсловий + "$ВСД_Продукция_Элемент.ВидПродукции = '"+МД.ЗначениеВСтрокуБД(СтрокаПоиска)+"' AND ";
				ЕстьУсловие = 1;
			ИначеЕсли тзОтбор.Элемент = "Отбор по номенклатуре" Тогда
				Если ГМ.ЭтоSQL = 1 Тогда
					ТекстЗапроса = ТекстЗапроса + "
						|	INNER JOIN 
						|		$Справочник.ВСД_Номенклатура_Соответсвия as СпрН 
						|		ON СпрН.ParentExt = '"+МД.ЗначениеВСтрокуБД(СтрокаПоиска)+"' 
						|		AND $СпрН.ВСД_Продукция_Элемент = ВСД_Продукция_Элемент.ID
						|		AND СпрН.ISMARK =0 
						|";
				Иначе
					ТекстЗапроса = ТекстЗапроса + "
						|	INNER JOIN 
						|		[Справочник.ВСД_Номенклатура_Соответсвия] as СпрН 
						|		ON СпрН.ParentExt = '"+МД.ЗначениеВСтрокуБД(СтрокаПоиска)+"' 
						|		AND СпрН.ВСД_Продукция_Элемент = ВСД_Продукция_Элемент.ID
						|		AND СпрН.ISMARK ='' 
						|";
				КонецЕсли;
				ЕстьУсловие = 1;
			//ИначеЕсли тзОтбор.Элемент = "Отбор по площадке" Тогда
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	//Пока Найти(СтрокаУсловий, "  ")>0 Цикл
	//	СтрокаУсловий = СокрЛП(СтрЗаменить(СтрокаУсловий, "  ", " "));
	//КонецЦикла;	

	СтрокаУсловий = СтрокаУсловий + "$ВСД_Партия.Получатель_Площадка = '"+МД.ЗначениеВСтрокуБД(Отправитель_Площадка)+"' AND ";
	ЕстьУсловие = 1; 
	
	// убираем конечный AND 
	СтрокаУсловий=Лев(СтрокаУсловий,(СтрДлина(СтрокаУсловий)-5));
	
	Если ГМ.ЭтоSQL = 0 Тогда
		СтрокаУсловий = СтрЗаменить(СтрокаУсловий,"$","");
	КонецЕсли;
	
	Если СтрокаУсловий <> "" Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|WHERE "+СтрокаУсловий;
	КонецЕсли;
	
	//ТекстЗапроса = ТекстЗапроса + "
	//	|GROUP BY ВСД_Партия.ID"+ОтборСортировки+"
	//	|ORDER BY 2";  
	//	
	
	ВремТЗ = СоздатьОбъект("ТаблицаЗначений");
	Если ГМ.ЭтоSQL = 1 Тогда
		ГМ.RS.Отладка(0);
		ГМ.RS.ВыполнитьИнструкцию(ТекстЗапроса, ВремТЗ); 
	Иначе
		Запрос = ГМ.базаДанных.НовыйЗапрос();
		//Запрос.Отладка();
		ВремТЗ = Запрос.ВыполнитьЗапрос(ТекстЗапроса);
	КонецЕсли;

	тзПартий.Загрузить(ВремТЗ);		
	тпПартий.ОбновитьСтроки();

КонецПроцедуры

//======================================================================
Процедура ПоКнопкеОтправить()
	Если Вопрос("Вы уверены?", "Да+Нет", 30) = "Нет" Тогда
		Возврат;
	КонецЕсли;
	
	тзПартий.ВыбратьСтроки();
	Пока тзПартий.ПолучитьСтроку() = 1 Цикл  
		Если тзПартий.Пометка = 1 Тогда  
			Если ПустоеЗначение(тзПартий.Документ) = 0 Тогда
				ГМ2.Отправить_ВСД2_Инвентаризация(тзПартий.Документ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	тпПартий.ОбновитьСтроки();
КонецПроцедуры

//======================================================================
Функция СоздатьИнвентаризацию(Партия)
	Док = СоздатьОбъект("Документ.ВСД2_Инвентаризация");
	
	Док.Новый();
	Док.ДатаДок = ТекущаяДата();
	Док.Владелец_ХозСубъект = Отправитель_ХозСубъект;
	Док.Владелец_Площадка = Отправитель_Площадка;
    
	Док.ПричинаРасхождения = ГМ.ПолучитьКонстанту("ПарамПричинаРасхожденияВИнвентаризации"); // "Не найдено на складе";
	Док.ОписаниеНесоответствия = ГМ.ПолучитьКонстанту("ПарамОписаниеНесоответствияВИнвентаризации"); 
	
	Док.НоваяСтрока();
	Док.Партия = Партия;
	Док.Продукция = Партия.Продукция;
	Док.ВидПродукции= Партия.ВидПродукции;

	Док.ЕдиницаИзмерения = Партия.ЕдиницаИзмерения;
	Док.НаименованиеПродукции = Партия.НаименованиеПродукции;
	Док.ДатаИзготовления1 = Партия.ДатаИзготовления1;
	Док.ДатаИзготовления2 = Партия.ДатаИзготовления2;
	Док.ДатаСрокГодности1 = Партия.ДатаСрокГодности1;
	Док.ДатаСрокГодности2 = Партия.ДатаСрокГодности2;
	Док.Производитель_площадка = Партия.Производитель_Площадка;
	Док.Продукция_Элемент = Партия.Продукция_Элемент;
	
	Док.Записать();
	
	Возврат Док.ТекущийДокумент();
КонецФункции

//======================================================================
Процедура ПоКнопкеСписать()  
	Если Вопрос("Вы уверены?", "Да+Нет", 30) = "Нет" Тогда
		Возврат;
	КонецЕсли;
	
	тзПартий.ВыбратьСтроки();
	Пока тзПартий.ПолучитьСтроку() = 1 Цикл  
		Если тзПартий.Пометка = 1 Тогда  
			Если ПустоеЗначение(тзПартий.Документ) = 1 Тогда
				ВыбДок = СоздатьИнвентаризацию(тзПартий.ВСД_Партия);
				тзПартий.Документ = ВыбДок;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	тпПартий.ОбновитьСтроки();
КонецПроцедуры

//======================================================================
Процедура ПоКнопкеОбновитьПартии()
	тзПартий.ВыбратьСтроки();
	Пока тзПартий.ПолучитьСтроку() = 1 Цикл  
		Состояние("строка "+тзПартий.НомерСтроки+"/"+тзПартий.КоличествоСтрок());
		Если тзПартий.Пометка = 1 Тогда  
			
			Если ПустоеЗначение(тзПартий.ВСД_Партия.GUID)=1 Тогда
			//	Сообщить(" " +тзПартий.ВСД_Партия+"  Получить информацию о продукции можно только при наличии GUID");
			Продолжить;
		КонецЕсли;
		
		ПараПараметров = СоздатьОбъект("СписокЗначений");
		ПараПараметров.Установить("Контекст", тзПартий.ВСД_Партия);
		ПараПараметров.Установить("Операция", "");
		ГМ2.Партии_ПолучитьПоGUID(тзПартий.ВСД_Партия);
		тзПартий.ГоденДо=тзПартий.ВСД_Партия.ДатаСрокГодности1;
		тзПартий.ГоденДо2=тзПартий.ВСД_Партия.ДатаСрокГодности2;
		КонецЕсли;
	КонецЦикла;
	тпПартий.ОбновитьСтроки();
КонецПроцедуры 

Процедура СоздатьДокументОбъединениеПартий( тз )
	
	Док = СоздатьОбъект("Документ.ВСД2_ОбъединениеПартий");
	Док.Новый();
	Док.ДатаДок = ТекущаяДата();
	Док.Владелец_площадка = Отправитель_Площадка;
	Док.Владелец_ХозСубъект = Отправитель_ХозСубъект;
	
	Попытка Док.Автор = глПользователь; Исключение КонецПопытки;
	Попытка Док.Фирма = ВыбФирма; Исключение КонецПопытки;
	
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл

		Если тз.ВСД_Партия.ПометкаУдаления()=1 Тогда 
			Продолжить;
		КонецЕсли;
		
		Док.ВСД_ПродукцияЭлемент = тз.Продукция_Элемент;
		Док.ВыбПродукция = Док.ВСД_ПродукцияЭлемент.Продукция;
		Док.ВыбВидПродукции = Док.ВСД_ПродукцияЭлемент.ВидПродукции;
		
		Док.НоваяСтрока();
		//Док.Номенклатура = ;
		Док.Партия = тз.ВСД_Партия;
		Док.Количество = тз.Количество;
		Док.ЕдиницаИзмерения = Док.ВСД_ПродукцияЭлемент.ЕдиницаИзмерения;
		Док.ДатаИзготовления1 = Док.Партия.ДатаИзготовления1;
		Док.ДатаИзготовления2 = Док.Партия.ДатаИзготовления2;
		Док.ДатаСрокГодности1 = Док.Партия.ДатаСрокГодности1;
		Док.ДатаСрокГодности2 = Док.Партия.ДатаСрокГодности2;
		
	КонецЦикла;
	
	Если Док.КоличествоСтрок()>1 Тогда		
		
		Док.Записать();
		ОткрытьФорму(Док.ТекущийДокумент());
		Сообщить("Создан документ "+Док.ТекущийДокумент()+" "+Док.ВСД_ПродукцияЭлемент );
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьДокументИнвентаризация( тзПартиСвертки )
	
	Док = СоздатьОбъект("Документ.ВСД2_Инвентаризация");
	Док.Новый();
	Док.ДатаДок = ТекущаяДата();
	Док.Владелец_площадка = Отправитель_Площадка;
	Док.Владелец_ХозСубъект = Отправитель_ХозСубъект;
	
	Док.ПричинаРасхождения = ГМ.ПолучитьКонстанту("ПарамПричинаРасхожденияВИнвентаризации"); // "Объединение партий";
	Док.ОписаниеНесоответствия = ГМ.ПолучитьКонстанту("ПарамОписаниеНесоответствияВИнвентаризации"); // "Объединение партий";

	Попытка Док.Автор = глПользователь; Исключение КонецПопытки;
	Попытка Док.Фирма = ВыбФирма; Исключение КонецПопытки;
	
	тзПартиСвертки.ВыбратьСтроки();
	Пока тзПартиСвертки.ПолучитьСтроку() = 1 Цикл

		Если тзПартиСвертки.ВСД_Партия.ПометкаУдаления()=1 Тогда 
			Продолжить;
		КонецЕсли;
		
		Док.НоваяСтрока();
		Док.Продукция_Элемент = тзПартиСвертки.Продукция_Элемент;
		Док.Продукция = Док.Продукция_Элемент.Продукция;
		Док.ВидПродукции = Док.Продукция_Элемент.ВидПродукции;
		
		//Док.Номенклатура = ;
		Док.Партия = тзПартиСвертки.ВСД_Партия;   
		Если тзПартиСвертки.НомерСтроки=1 Тогда
			Док.Количество = тзПартиСвертки.Итог("Количество");
		Иначе      
			Док.Количество = 0;
		КонецЕсли;
		Док.ЕдиницаИзмерения = Док.Продукция_Элемент.ЕдиницаИзмерения;
		Док.ДатаИзготовления1 = Док.Партия.ДатаИзготовления1;
		Док.ДатаИзготовления2 = Док.Партия.ДатаИзготовления2;
		Док.ДатаСрокГодности1 = Док.Партия.ДатаСрокГодности1;
		Док.ДатаСрокГодности2 = Док.Партия.ДатаСрокГодности2;
		 
		Док.Производитель_Страна = ГМ.СписокКонстант.Получить("Страна");
		Док.Производитель_площадка = Отправитель_Площадка;
		//Сообщить(СокрЛП( Док.Продукция_Элемент )+"; "+СокрЛП( Док.Партия.ДатаИзготовления1 )+"; "+СокрЛП( Док.Количество )+"; "+СокрЛП( тз.Количество ));
		
	КонецЦикла;
	
	Если Док.КоличествоСтрок()>1 Тогда
		
		Док.Записать();
		ОткрытьФорму(Док.ТекущийДокумент());
		Сообщить("Создан документ "+Док.ТекущийДокумент() );
	КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура ПоКнопкеОбъединить()
	
	меню = СоздатьОбъект("СписокЗначений");		
	меню.ДобавитьЗначение("ОбъединениеПартий","партии с одной датой изготовления документом ВСД2_ОбъединениеПартий");
	меню.ДобавитьЗначение("Инвентаризация","партии с одной датой изготовления документом ВСД2_Инвентаризация");

	Зн = ""; 
	Сервис = СоздатьОбъект("Сервис");
	Если Сервис.ВыбратьЗначение(меню,Зн,,0,) <> 1 Тогда
		Возврат ;
	КонецЕсли;	
		
	итз = СоздатьОбъект("ИндексированнаяТаблица");
	итз.Загрузить(тзПартий);

	// удалим неактивные партии
	поз = итз.КоличествоСтрок();
	Пока поз>0 Цикл
		ВСД_Партия = итз.ПолучитьЗначение( поз, "ВСД_Партия");
		если ВСД_Партия.ПометкаУдаления()=1 Тогда 
			итз.УдалитьСтроку( поз );
		КонецЕсли;
		
		поз=поз-1;
	КонецЦикла;	
	
	итз.Группировать( "Продукция_Элемент: Продукция_Элемент; Изготовлено: Изготовлено; ВСД_Партия: ВСД_Партия", "Количество" , 1);	
	
	итз.ВыбратьСтроки();
	Пока итз.ПолучитьСтроку()=1 Цикл 

		итзИзготовлено = итз.ТЗПотомки;				
		
		итзИзготовлено.ВыбратьСтроки();
		Пока итзИзготовлено.ПолучитьСтроку()=1 Цикл
			
			тзПартиДляСвертки = итзИзготовлено.ТЗПотомки;		
			Если тзПартиДляСвертки.КоличествоСтрок()>1 Тогда 

				Если Зн = "ОбъединениеПартий" Тогда
		
					СоздатьДокументОбъединениеПартий( тзПартиДляСвертки );
					
				Иначе // Инвентаризация
					
					СоздатьДокументИнвентаризация( тзПартиДляСвертки );
					
				КонецЕсли;				
			  	
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	тпПартий.ОбновитьСтроки();
	
КонецПроцедуры 

//======================================================================
Процедура тпОтборВыбор(ТабличноеПоле, Стр, Колонка, ТипРегиона)
	Если ТипРегиона =3 Тогда
		ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, тзОтбор);

		КодКолонки = Колонка.Данные;
		
		Если (КодКолонки = "Значение") Тогда
			Если Стр > 1 Тогда
				_знач = тзОтбор.Значение;
				Если тзОтбор.ВыборДаты = 1 Тогда                                  
					_знач = Дата(_знач);
					ТабличноеПоле.РедактироватьЗначение(Стр, Колонка, ТипРегиона, _знач,10,0, тзОтбор.ЭлементДиалога, "0x00000020");		
				ИначеЕсли ТипЗначенияСтр(_знач) = "Справочник" Тогда
					ТабличноеПоле.РедактироватьЗначение(Стр, Колонка, ТипРегиона, _знач,50,0, тзОтбор.ЭлементДиалога, "0x00000200");		
				Иначе                                                             
					_знач = Строка(_знач);
					ТабличноеПоле.РедактироватьЗначение(Стр, Колонка, ТипРегиона, _знач,50,0, тзОтбор.ЭлементДиалога, "0x100000");		
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура тпОтборПриРедактированииЗначения(ТабличноеПоле, Стр, Колонка, ТипРегиона, __знач)
	Если ТипРегиона = 3 Тогда
		КодКолонки = Колонка.Данные;

		Если КодКолонки = "Значение" Тогда
			ТекЗнач = ТабличноеПоле.ТекущиеДанные.Значение;

			Если ТекЗнач <> __знач Тогда
				тзОтбор.УстановитьЗначение(ТабличноеПоле.ТекущаяСтрока,"Значение",__знач);
				Если ПустоеЗначение(__знач) = 0 Тогда
					тзОтбор.УстановитьЗначение(ТабличноеПоле.ТекущаяСтрока,"Пометка",1);
				Иначе
					тзОтбор.УстановитьЗначение(ТабличноеПоле.ТекущаяСтрока,"Пометка",0);
				КонецЕсли;
				ТабличноеПоле.ОбновитьСтроки();
				
				УстановитьОтбор();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

//======================================================================
Процедура тпОтборПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)
	ОбъектЯчейка=ОформлениеСтроки.Ячейки.Получить("Пометка");
	ОбъектЯчейка.ЗначениеФлажка=ДанныеСтроки.Получить("Пометка");
	ОбъектЯчейка.ОтображатьФлажок=1;
	ОбъектЯчейка.ОтображатьТекст=0;
	     
	Если (ДанныеСтроки.ЭлементДиалога = "Дата") Тогда
		ОбъектЯчейка=ОформлениеСтроки.Ячейки.Получить("Элемент");
		ОбъектЯчейка.ЗначениеФлажка=ДанныеСтроки.Получить("ВыборДаты");
		ОбъектЯчейка.ОтображатьФлажок=1;            
		
		Окончание = ?(ДанныеСтроки.ВыборДаты = 1, "( до выбранной даты, включительно )", "(по шаблону = строка)");
		ОбъектЯчейка.Текст = ДанныеСтроки.Элемент + " " + Окончание;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура тпОтборПриВыбореФлажка(ТабличноеПоле,Стр, Колонка, ТипРегиона)

	ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, тзОтбор);
	
	КодКолонки = Колонка.Имя;
	
	Если КодКолонки = "Пометка" Тогда
		_знач = тзОтбор.Пометка;
		НовЗнач = ?(_знач=1,0,1);
		тзОтбор.Пометка = НовЗнач;
	Иначе
		_знач = тзОтбор.ВыборДаты;
		НовЗнач = ?(_знач=1,0,1);
		тзОтбор.ВыборДаты = НовЗнач;
	КонецЕсли;
	
	ТабличноеПоле.ОбновитьСтроки();
	
	УстановитьОтбор();

КонецПроцедуры

//======================================================================
Процедура тпПартийПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)
	
	Если ДанныеСтроки.ВСД_Партия.ПометкаУдаления()=1 Тогда 
		
		ОформлениеСтроки.ЦветФона = ГМ.цвСерый;
		
	ИначеЕсли ПустоеЗначение(ДанныеСтроки.Документ)=0 Тогда 
		
		Если СокрЛП(ДанныеСтроки.Документ.Статус) = "COMPLETED" Тогда 
			ОформлениеСтроки.ЦветФона = ГМ.цвЗеленый;
		ИначеЕсли СокрЛП(ДанныеСтроки.Документ.Статус) = "REJECTED" Тогда 
			ОформлениеСтроки.ЦветФона = ГМ.цвКрасный;
		Иначе
			ОформлениеСтроки.ЦветФона = ГМ.цвЖелтый;
		КонецЕсли;
		
	КонецЕсли;

	Если ТипРегиона = 3 Тогда
		ГМ.ВывестиФлажок(ОформлениеСтроки, ДанныеСтроки, "Пометка");
		
		ОбъектЯчейка=ОформлениеСтроки.Ячейки.Получить("Изготовлено");
		ОбъектЯчейка.Текст=ГМ.Преобразовать_СтрокаДата_в_ФормализованнаяДата(ДанныеСтроки.Изготовлено); 
		ОбъектЯчейка=ОформлениеСтроки.Ячейки.Получить("ГоденДо");
		ОбъектЯчейка.Текст=ГМ.Преобразовать_СтрокаДата_в_ФормализованнаяДата(ДанныеСтроки.ГоденДо); 
		ОбъектЯчейка=ОформлениеСтроки.Ячейки.Получить("ГоденДо2");
		ОбъектЯчейка.Текст=ГМ.Преобразовать_СтрокаДата_в_ФормализованнаяДата(ДанныеСтроки.ГоденДо2); 
	КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура тпПартийПриВыбореЗаголовка(ТабличноеПоле,Колонка)
	Если тзПартий.КоличествоСтрок()=0 Тогда Возврат;
	КонецЕсли;
	ТабличноеПоле.ТекущаяКолонка=Колонка;
	Колонка.ЗнакУпорядочивания = ?(Колонка.ЗнакУпорядочивания=1,2,1);

	СтрокаСортировки=?(Колонка.ЗнакУпорядочивания=1,"","-")+Колонка.Имя;

	Если Колонка.Имя = "Продукция_Элемент" Тогда
		СтрокаСортировки = СтрокаСортировки+",Изготовлено";
	ИначеЕсли Колонка.Имя = "Количество" Тогда
		СтрокаСортировки = СтрокаСортировки+",Продукция_Элемент";
	КонецЕсли;

	тзПартий.Сортировать(СтрокаСортировки);
	ТабличноеПоле.ОбновитьСтроки();

	КолКлонок=ТабличноеПоле.Колонки.Количество()-1;
	Для Сч = 0 По КолКлонок Цикл
		ВыбКолонка=ТабличноеПоле.Колонки.Получить(Сч);
		Если ВыбКолонка <> Колонка Тогда
			ВыбКолонка.ЗнакУпорядочивания=0;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура тпПартийПриВыбореФлажка(ТабличноеПоле,Стр, Колонка, ТипРегиона)
	ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, тзПартий);
	тзПартий.Пометка = ?(тзПартий.Пометка = 1,0,1);
	ТабличноеПоле.ОбновитьСтроки();
КонецПроцедуры

Процедура тпПартийВыбор()
	ГМ.ПриАктивизацииСтрокиТП(тпПартий, тзПартий);
	ГМ.ПриАктивизацииКолонкиТП(тпПартий, тзПартий);
	
	текСтр=тзПартий.ТекущаяСтрока();
	Если текСтр=0 Тогда Возврат; КонецЕсли;
	текКол = тзПартий.ТекущаяКолонка();
	
	Эл = тзПартий.ПолучитьЗначение(текСтр, текКол);	
	ОткрытьФорму(Эл);
	
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииФирмы()
	ГМ.Инициализация(Контекст);
	ГМ.ЗагрузитьПараметрыВФорму(Контекст);

	тзПартий.УдалитьСтроки();
	//тпПартий.ОбновитьСтроки();
	
	УстановитьОтбор();
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииСФ()
	Если СписокФирм.ТекущаяСтрока() <> 0 Тогда
		ВыбФирма = СписокФирм.ПолучитьЗначение(СписокФирм.ТекущаяСтрока());
		ПриИзмененииФирмы();
	КонецЕсли;
КонецПроцедуры

Процедура ПриИзмененииПлощадки()

	тзПартий.УдалитьСтроки();
	тпПартий.ОбновитьСтроки();
	
	УстановитьОтбор();
	
КонецПроцедуры

//======================================================================
Процедура ПриОткрытии()
	ВыбФирма = "";
	ГМ._ПриОткрытии(Контекст);

//	оПривязки.УстановитьФорму(Форма);
	оПривязки.Привязка("тпПартий", "H", "Форма", "W", "Форма");
	оПривязки.Привязка("кнСписать,кнОтправить,Версия,кнПартии,кнОбъединить","T","Форма");
	
	оПривязки.Привязка("тпОтбор,рамкаЗакладки", "T", "Форма", "W", "Форма");
КонецПроцедуры

//======================================================================
Процедура ПослеОткрытия()
	оПривязки.ПослеОткрытия();
	
	УстановитьОтбор();
	
КонецПроцедуры

//======================================================================
Процедура ПослеСозданияФормы()
	Перем ВремТЗ;
	тпПартий = оПривязки.СоздатьТабличноеПоле( Контекст, "тпПартий", тзПартий, 1,1);
	
	// Отбор
	тзОтбор = СоздатьОбъект("ТаблицаЗначений");
	тзОтбор.НоваяКолонка("Пометка","Число",,,"Вкл",3);
	тзОтбор.НоваяКолонка("Элемент",,,,"Представление реквизита",20);
	тзОтбор.НоваяКолонка("Значение",,,,"Значение",30);
	тзОтбор.НоваяКолонка("ЭлементДиалога");
	тзОтбор.НоваяКолонка("ВыборДаты","Число");

	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Только актуальные";
	тзОтбор.Пометка = 1;
	тзОтбор.Значение = "ИСТИНА";
	тзОтбор.ЭлементДиалога = "Актуальные";
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Наименование";
	тзОтбор.Значение = "";
	тзОтбор.ЭлементДиалога = "ВыбНаименование";
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Продукция_Элемент";
	тзОтбор.Значение = ПолучитьПустоеЗначение("Справочник.ВСД_Продукция_Элемент");
	тзОтбор.ЭлементДиалога = "ВСД_Продукция_Элемент";
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Дата изготовления";
	тзОтбор.Значение = ПолучитьПустоеЗначение("Дата");
	тзОтбор.ЭлементДиалога = "Дата";
	тзОтбор.ВыборДаты = 1;
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Годен до";
	тзОтбор.Значение = ПолучитьПустоеЗначение("Дата");
	тзОтбор.ЭлементДиалога = "Дата";
	тзОтбор.ВыборДаты = 1;
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Годен до2";
	тзОтбор.Значение = ПолучитьПустоеЗначение("Дата");
	тзОтбор.ЭлементДиалога = "Дата";
	тзОтбор.ВыборДаты = 1;
	//тзОтбор.НоваяСтрока();
	//тзОтбор.Элемент = "Продукция";
	//тзОтбор.Значение = ПолучитьПустоеЗначение("Справочник.ВСД_Продукция");
	//тзОтбор.ЭлементДиалога = "ВСД_Продукция";
	//тзОтбор.НоваяСтрока();
	//тзОтбор.Элемент = "Вид продукции";
	//тзОтбор.Значение = ПолучитьПустоеЗначение("Справочник.ВСД_ВидПродукции");
	//тзОтбор.ЭлементДиалога = "ВыбВидПродукции";
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Отбор по номенклатуре";
	тзОтбор.Значение = ПолучитьПустоеЗначение("Справочник.Номенклатура");
	тзОтбор.ЭлементДиалога = "ВыбТМЦ";
	
	тпОтбор=оПривязки.СоздатьТабличноеПоле(Контекст, "тпОтбор", тзОтбор, 1);
	
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	оПривязки.ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры
    
//======================================================================
Процедура ГрупповаяПометка(Режим)
	тзПартий.ВыбратьСтроки();
	Пока тзПартий.ПолучитьСтроку() = 1 Цикл
		тзПартий.Пометка = Режим;
	КонецЦикла;                  
	тпПартий.ОбновитьСтроки();
КонецПроцедуры
	
//======================================================================
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога,ФлагСтандОбр)
	Если ЭлементДиалога = "Отправитель_Площадка" Тогда
		ВремЭлем = Отправитель_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;
	КонецЕсли;
	Если ЭлементДиалога = "ВыбВидПродукции" Тогда
		Поз = 0;
		Если тзОтбор.НайтиЗначение("ВСД_Продукция",Поз,"ЭлементДиалога") = 1 Тогда
			СуперВладелец = тзОтбор.ПолучитьЗначение(Поз,"Значение");	
			Если ПустоеЗначение(СуперВладелец) = 0 Тогда
				Парам = "";
				ОткрытьФорму("Справочник.ВСД_ВидПродукции",Парам);
				Парам.ИспользоватьВладельца(СуперВладелец);
			Иначе
				Сообщить("Выберите продукцию!");
			КонецЕсли;
		КонецЕсли;
		ФлагПродолжения = 0;                    
	КонецЕсли;
КонецПроцедуры // ПриНачалеВыбораЗначения()

//======================================================================
Процедура ПриНажатииЛевойКнопки(Сост, х, у, ФСО)
	
	ФормаРасш = СоздатьОбъект("РасширениеФормы");
	Атр = ФормаРасш.ПолучитьАтрибутПоКоординатам(х,у);
	Если ТипЗначенияСтр(Атр) = "АтрибутФормы" Тогда
		Если Атр.Идентификатор = "Версия" Тогда
			ЗапуститьПриложение( ГМ.ВерсияСсылка() );
		КонецЕсли;  
	КонецЕсли;	
	
КонецПроцедуры

тзПартий = СоздатьОбъект("ТаблицаЗначений");
тзПартий.НоваяКолонка("Код",,,,,5,);
тзПартий.НоваяКолонка("Пометка",,,,,5,);
тзПартий.НоваяКолонка("ВСД_Партия",,,,"Партия",20,);
тзПартий.НоваяКолонка("Продукция_Элемент",,,,,20,);
тзПартий.НоваяКолонка("Количество","Число",,,"Масса нетто",15,"Ч15.3.'");
тзПартий.НоваяКолонка("Изготовлено",,,,"Изготовлено",15,);
тзПартий.НоваяКолонка("ГоденДо",,,,"Годен до",15,);
тзПартий.НоваяКолонка("ГоденДо2",,,,"Годен до2",10,);
тзПартий.НоваяКолонка("НомерПартии",,,,"Номер партии",10,);
тзПартий.НоваяКолонка("Единица",,,,"Единица",5,); 
тзПартий.НоваяКолонка("Производитель_Площадка",,,,"Производитель Площадка",20,); 
тзПартий.НоваяКолонка("Получатель_Площадка",,,,"Получатель Площадка",20,); 
тзПартий.НоваяКолонка("НомерЗаписи",,,,"Номер записи",8,); 
тзПартий.НоваяКолонка("Дата","Дата",,,"Дата",8,); 
тзПартий.НоваяКолонка("Статус",,,,,8,); 
тзПартий.НоваяКолонка("Продукция",,,,,10,);
тзПартий.НоваяКолонка("Документ",,,,,20,);
