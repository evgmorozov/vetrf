 //+phsin@КБ99, 2016-08-15 15:02:17
Перем СписокДействий; // для механизма кнопки "Действия"
Перем ВыбФирма;

Процедура ПриВыбореФирмы()
	попытка
		ГМ.Инициализация(Контекст);
		Владелец_ХозСубъект = ГМ.СписокКонстант.Получить("Отправитель_ХозСубъект");
		Владелец_Площадка = ГМ.СписокКонстант.Получить("Отправитель_Площадка");
	Исключение
		
	КонецПопытки
	
КонецПроцедуры  

//======================================================================
Процедура ПриИзмененииСФ()
	Если СписокФирм.ТекущаяСтрока() <> 0 Тогда
		ВыбФирма = СписокФирм.ПолучитьЗначение(СписокФирм.ТекущаяСтрока());

		ФирмаИмяРеквизита = "";
		ГМ.ПолучитьИмяРеквизитаФирма(Вид(), ФирмаИмяРеквизита);
		Попытка УстановитьАтрибут(ФирмаИмяРеквизита, ВыбФирма);  Исключение КонецПопытки;

		ПриВыбореФирмы();
	КонецЕсли;
КонецПроцедуры // ПриИзмененииСФ


Процедура Отправить()

	Если Проведен()=1 Тогда 
		Возврат;
	КонецЕсли;
	Если ПометкаУдаления()=1 Тогда 
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(applicationID)=0 Тогда 
		Если Вопрос("Документ уже был отправлен, отправить ПОВТОРНО?",4,30)<>6 Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Записать();
	
	ЗаписьЖурналаРегистрации("Меркурий отправка ВСД Объединение партий "+НомерДок+" от "+ДатаДок);
	
   ПараПараметров = СоздатьОбъект("СписокЗначений");
   ПараПараметров.Установить("КонтекстДокумента", Контекст);
   ПараПараметров.Установить("ГМ", ГМ);
   
   ОткрытьФорму("Отчет", ПараПараметров, ГМ.ПолучитьКонстанту("КаталогМодуля")+"ВСД_ОтправкаИзФормы.ert");
   	
КонецПроцедуры


//*****************************************************************************
// ПоКнопкеОснование()
// 
// Параметры: 
//  Нет
//
// Возвращаемое значение: 
//  Нет
//
// Описание:
// 	Вызывается по кнопке выбора документа основания                  
//
Процедура ПоКнопкеОснование()
	
	Перем Основание;
	
	// если документ основание уже есть, откроем его
	Если ПустоеЗначение(ДокОснование) = 0 Тогда
		ОткрытьФорму(ДокОснование);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВводНового(Скопирован)
	UUID = "";
	applicationID = "";
	Статус = ""; 
	Если Скопирован = 0 Тогда
		Попытка
			Фирма = ГМ.глЗначениеПоУмолчанию("ОсновнаяФирма");
			ПриВыбореФирмы();
		Исключение КонецПопытки;
	КонецЕсли;
	Попытка	Автор = ГМ.ПолучитьАвтора();	Исключение	КонецПопытки;
	Попытка	Филиал = Автор.Филиал;			Исключение	КонецПопытки;
КонецПроцедуры

Процедура ПриОткрытии()

	ГМ._ПриОткрытии(Контекст);
	
	ПриЗаписиПерепроводить(1);
	
	//Инициализирум список действий по кнопке "Действия"
	СписокДействий = СоздатьОбъект("СписокЗначений");
	СписокДействий.ДобавитьЗначение("Перейти в журнал");
	СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
	СписокДействий.ДобавитьЗначение("Отчет о бухгалтерских проводках");
	СписокДействий.ДобавитьЗначение("Структура подчиненности"); 
	СписокДействий.ДобавитьЗначение("История");
		
	Если Проведен()=1 Тогда 
		Форма.ТолькоПросмотр(1);
	КонецЕсли;
КонецПроцедуры

////******************************************************************************
//// предопределенная процедура
////
//Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
//	
//	Если ЗначениеЗакладки="Основной" Тогда
//		Форма.ИспользоватьСлой("Шапка,Основной,Подвал");
//	//ИначеЕсли НомерЗакладки=2 Тогда
//	//	Форма.ИспользоватьСлой("Шапка,Товары,Подвал");		
//	//ИначеЕсли НомерЗакладки=3 Тогда
//	//	//ОбновитьНадписи();
//	//	Форма.ИспользоватьСлой("Шапка,Запрос,Подвал");
//	ИначеЕсли ЗначениеЗакладки="Результат" Тогда
//		Форма.ИспользоватьСлой("Шапка,Результат,Подвал");
//	КонецЕсли;       
//	//УстановкаВидимостиСуммВПодвале();
//	
//КонецПроцедуры // ПриВыбореЗакладки()


//******************************************************************************
// ПоКнопкеПечать()
// 
// Параметры: 
//	Нет
//
// Описание:
// 	Вызывается по кнопке "Печать"  
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Параметры = СоздатьОбъект("СписокЗначений");
	Попытка Параметры.ДобавитьЗначение(?((Модифицированность()=0) и (ПустоеЗначение(ТекущийДокумент())=0), ТекущийДокумент(), ГМ.глВзятьКонтекст(Контекст)), "Контекст"); Исключение КонецПопытки;
	Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
	Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");

	ОткрытьФорму("Отчет", ТекущийДокумент(), ГМ.ПолучитьКонстанту("КаталогМодуля")+"ПечФорма_ВСД_ОбъединениеПартий.ert");
	
КонецПроцедуры // ПоКнопкеПечать()

Процедура ОткрытьМеркурий()
	//Если ПустоеЗначение(UUID)=1 Тогда
	//	Предупреждение("Не указан UUID документа ВСД");
	//Иначе
	//	ВерсияСистемы = ВосстановитьЗначение("ВСД_ВерсияСистемы");	
	//	Если ВерсияСистемы=2 Тогда 
	//		//рабочая
			ЗапуститьПриложение("https://t2-mercury.vetrf.ru/gve/operatorui?_action=listInventory&_language=ru&stateMenu=0&all=true");	
	//	Иначе
	//		//тестовая
	//		ЗапуститьПриложение("https://t2-mercury.vetrf.ru/pub/operatorui?_action=findVetDocumentFormByUuid&uuid="+UUID);	
	//	КонецЕсли;
	//КонецЕсли;
КонецПроцедуры

//******************************************************************************
// Предопределенная процедура
//
Процедура ВводНаОсновании(ДокументОснование)
	    
	ДатаДок = ДокументОснование.ДатаДок;		
	
//	
//	Если ДокументОснование.Вид()="ПеремещениеТМЦ" Тогда 
//		
//	Иначе
//
//	КонецЕсли;
	
	//Если ПустоеЗначение(Результат) = 0 Тогда
	//	Сообщить(Результат);
	//	СтатусВозврата(0);
	//КонецЕсли;
	//
КонецПроцедуры // ВводНаОсновании()

Процедура ПриВыбореПартии()
	
	Продукция = Партия.Продукция;
	ВидПродукции = Партия.ВидПродукции;
	ЕдиницаИзмерения = Партия.ЕдиницаИзмерения;
	ФормаУпаковки = Партия.ФормаУпаковки;
	НаименованиеПродукции = Партия.НаименованиеПродукции;
	ДатаИзготовления1 = Партия.ДатаИзготовления1;
	ДатаИзготовления2 = Партия.ДатаИзготовления2;
	ДатаСрокГодности1 = Партия.ДатаСрокГодности1;
	ДатаСрокГодности2 = Партия.ДатаСрокГодности2;
	Производитель_площадка = Партия.Производитель_Площадка;
	Количество = Партия.Количество;
	КоличествоМест = Партия.КоличествоМест;
	Продукция_Элемент = Партия.Продукция_Элемент;
	
КонецПроцедуры

Процедура ЗаполнитьТЧ()
	СпрПартии = СоздатьОбъект("Справочник.ВСД_Партия");
	СпрПартии.ВыбратьЭлементыПоРеквизиту("Продукция_Элемент", ВСД_ПродукцияЭлемент);
	Пока СпрПартии.ПолучитьЭлемент()=1 Цикл
		Если СпрПартии.ПометкаУдаления()=0 Тогда
			Если СпрПартии.Получатель_ХозСубъект <> Владелец_ХозСубъект Тогда Продолжить;
			КонецЕсли;
			Если СпрПартии.Получатель_Площадка <> Владелец_площадка Тогда Продолжить;
			КонецЕсли;
			НоваяСтрока();
			Партия = СпрПартии.ТекущийЭлемент();
			ПриВыбореПартии();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОткрытьПартии()
	ОткрытьФормуМодально("Справочник.ВСД_Партия", ТекущийДокумент());	
КонецПроцедуры

Процедура ПослеОткрытия()
	//ГМ.Инициализация(Контекст);        
КонецПроцедуры

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога,ФлагСтандОбр)
	Если ЭлементДиалога = "Владелец_площадка" Тогда
		ВремЭлем = Владелец_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;
	ИначеЕсли ЭлементДиалога = "Продукция_Элемент" Тогда
        парам = создатьОбъект("СписокЗначений");
        Парам.Установить("Продукция",Продукция);
        Парам.Установить("ВидПродукции",ВидПродукции);
        ОткрытьФорму("Справочник.ВСД_Продукция_Элемент.ФормаСписка", Парам);
        ФлагСтандОбр = 0;
	КонецЕсли;
КонецПроцедуры // ПриНачалеВыбораЗначения()

//******************************************************************************
Процедура ПриВыбореХС(Имя, ВыбХС)
	Если Имя = "Владелец_ХозСубъект" Тогда
		Если Владелец_Площадка.GuidХозСубъекта <> ВыбХС.GUID Тогда
			Владелец_Площадка = "";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПриВыбореХС
	
Процедура ДействияВСД()
	//меню
	СписокДействийВСД = СоздатьОбъект("СписокЗначений");
	//СписокДействийВСД.ДобавитьЗначение("СписокВСД","Список ВСД"); 
	СписокДействийВСД.ДобавитьЗначение("ОткрытьВсдВГис","Открыть ВСД в ГИС");
	СписокДействийВСД.ДобавитьЗначение("ОтправитьВСД","Отправить ВСД");
	СписокДействийВСД.ДобавитьЗначение("АннулироватьВСД","Аннулировать ВСД");
	СписокДействийВСД.ДобавитьЗначение("ОткрытьЗапрос","Открыть Запрос");
	СписокДействийВСД.ДобавитьЗначение("ОткрытьОтвет","Открыть Ответ");
	//СписокДействийВСД.ДобавитьЗначение("Мультимодальная","Мультимодальная перевозка");
	СписокДействийВСД.ДобавитьЗначение("ПолучитьОтветВетис","Получить ответ ВЕТИС");
			
	стр=0; Зн="";
	Если СписокДействийВСД.ВыбратьЗначение(Зн, "", стр, 60, 1) = 1 Тогда
		
		Записать();
		
		ГМ.Инициализация(Контекст);    
			
		Если Зн = "ОткрытьВсдВГис" Тогда
			ГМ.ОткрытьВсдВГис( ТекущийДокумент() );		
		ИначеЕсли Зн = "СписокВСД" Тогда
			ГМ.ОткрытьСписокВсд( ТекущийДокумент() );		
		ИначеЕсли Зн = "ОтправитьВСД" Тогда 
			Отправить();
		ИначеЕсли Зн = "АннулироватьВСД" Тогда 
		   	ПараПараметров = СоздатьОбъект("СписокЗначений");
		   	ПараПараметров.Установить("КонтекстДокумента", Контекст);
		   	ПараПараметров.Установить("ГМ", ГМ);
			ПараПараметров.Установить("Действие", "Аннулировать");		   		   
		   	ОткрытьФорму("Отчет", ПараПараметров, ГМ.ПолучитьКонстанту("КаталогМодуля")+"ВСД_ОтправкаИзФормы.ert");		
		ИначеЕсли Зн = "ОткрытьЗапрос" Тогда 
			ГМ.ОткрытьЗапрос( ТекущийДокумент() );		
		ИначеЕсли Зн = "ОткрытьОтвет" Тогда 
			ГМ.ОткрытьОтвет( ТекущийДокумент() );		
		ИначеЕсли Зн = "ПолучитьОтветВетис" Тогда 			
		   	ПараПараметров = СоздатьОбъект("СписокЗначений");
		   	ПараПараметров.Установить("КонтекстДокумента", Контекст);
		   	ПараПараметров.Установить("ГМ", ГМ);
			ПараПараметров.Установить("Действие", "ПолучитьОтвет");		   		   
		   	ОткрытьФорму("Отчет", ПараПараметров, ГМ.ПолучитьКонстанту("КаталогМодуля")+"ВСД_ОтправкаИзФормы.ert");		
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры 

//======================================================================
Процедура ПриИзмененииНоменклатуры()
	Если ВСД_ПродукцияЭлемент <> Номенклатура.ВСД_Продукция_Элемент Тогда
		ВСД_ПродукцияЭлемент = Номенклатура.ВСД_Продукция_Элемент;
		Если КоличествоСтрок() <> 0 Тогда
			УдалитьСтроки();
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры // ПриИзмененииНоменклатуры

ВыбФирма = "";