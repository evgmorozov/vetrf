 //+phsin@КБ99, 2018-01-25 17:51:33
Перем СписокДействий; // для механизма кнопки "Действия"
Перем Типытранспорта, ТипыТТН;
Перем ВыбФирма;

Процедура ДоступностьЭлементов()
//	Если Проведен()=1 Тогда 
//		Форма.ТолькоПросмотр(1); 
//		Форма.кнОК.Доступность(0);
////		Форма.кнЗаписать.Доступность(0);
////		Форма.кнОтправить.Доступность(0);	
//	КонецЕсли;
	//СзВСЭ.ТекущаяСтрока(СзВСЭ.НайтиЗначение(cargoExpertized));

КонецПроцедуры

Процедура ПриВыбореФирмы()
	попытка
		ГМ.Инициализация(Контекст);
		Отправитель_ХозСубъект = ГМ.СписокКонстант.Получить("Отправитель_ХозСубъект");
		Отправитель_Площадка = ГМ.СписокКонстант.Получить("Отправитель_Площадка");
		Особыеотметки = ГМ.СписокКонстант.Получить("ВСД_ОсобыеОтметки");

		//Экспертиза = ГМ.СписокКонстант.Получить("ВСД_Экспертиза");
		//Местность = ГМ.СписокКонстант.Получить("ВСД_Местность");
	Исключение

	КонецПопытки

КонецПроцедуры

//======================================================================
Процедура ПриИзмененииСФ()
	Если СписокФирм.ТекущаяСтрока() <> 0 Тогда
		ВыбФирма = СписокФирм.ПолучитьЗначение(СписокФирм.ТекущаяСтрока());

		ФирмаИмяРеквизита = "";
		ГМ.ПолучитьИмяРеквизитаФирма(Вид(), ФирмаИмяРеквизита);
		Попытка УстановитьАтрибут(ФирмаИмяРеквизита, ВыбФирма);  Исключение КонецПопытки;

		ПриВыбореФирмы();
	КонецЕсли;
КонецПроцедуры // ПриИзмененииСФ

Процедура КликПроизводители()
	Сп = ЗначениеИзСтроки(ПроизводителиСписок);
	Если НЕ(ТипЗначенияСтр(Сп) = "ТаблицаЗначений") Тогда
		Возврат; // Это старые Версии
	КонецЕсли;
	зн="";
	Сп.ВыбратьСтроку();

КонецПроцедуры

Процедура Упаковки()  //  Просмотр сведений об упаковке
	стрУровни = "";
	Если ПустаяСтрока(ИмяФайлаУровниУпаковки) = 0 Тогда
		ЗначениеИзФайла(ИмяФайлаУровниУпаковки, стрУровни);
		Если ПустаяСтрока(стрУровни) = 1 Тогда
			Предупреждение("Нет Упаковок");
		    Возврат;
		КонецЕсли;
	ИначеЕсли ПустоеЗначение(УровниУпаковки) = 1 Тогда
		Предупреждение("Нет Упаковок");
	    Возврат; 
	Иначе
		стрУровни = УровниУпаковки;
	КонецЕсли;
	
   	ОткрытьФорму("Отчет", стрУровни, ГМ.ПолучитьКонстанту("КаталогМодуля")+"ВСД_УровниУпаковки.ert");   	
КонецПроцедуры


Функция ТипТССтрокой()
	Рез = Типытранспорта.Получить(СокрЛП(типТС));
	Возврат Рез;
КонецФункции

Функция ТипТТНСтрокой()
	Рез = ТипыТТН.Получить(СокрЛП(ТТНТип));
	Возврат Рез;
КонецФункции


Процедура ПриСменеВидаВСД()

	Если ВидВСД=1 Тогда
		Форма.UUID.Доступность(0);

		//Форма.Продукция.Доступность(1);
		//Форма.ВидПродукции.Доступность(1);
		//Форма.НаименованиеПродукции.Доступность(1);
		//Форма.ДатаИзготовления1.Доступность(1);
		//Форма.ДатаИзготовления2.Доступность(1);
		//Форма.ДатаИзготовленияСтрока.Доступность(1);
		//Форма.ДатаСрокГодности1.Доступность(1);
		//Форма.ДатаСрокГодности2.Доступность(1);
		//Форма.ДатаСрокГодностиСтрока.Доступность(1);
	Иначе
		Форма.UUID.Доступность(1);

		//Форма.ВидПродукции.Доступность(0);
		//Форма.НаименованиеПродукции.Доступность(0);
		//Форма.ДатаИзготовления1.Доступность(0);
		//Форма.ДатаИзготовления2.Доступность(0);
		//Форма.ДатаИзготовленияСтрока.Доступность(0);
		//Форма.ДатаСрокГодности1.Доступность(0);
		//Форма.ДатаСрокГодности2.Доступность(0);
		//Форма.ДатаСрокГодностиСтрока.Доступность(0);

	КонецЕсли;

КонецПроцедуры

Процедура ВводНового(Скопирован)
	Статус="";
	applicationID="";
	GUID="";
	UUID="";
	НомерЗаписи="";
	ДатаИзменения="";
	RequestResult = "";
	Если Скопирован = 0 Тогда
		Попытка
			Фирма = ГМ.глЗначениеПоУмолчанию("ОсновнаяФирма");
			ПриВыбореФирмы();
		Исключение КонецПопытки;
		cargoInspected  	= 1;
		РезультатыИсследований = ГМ.СписокКонстант.Получить("ВСД_РезультатыИсследований");//Перечисление.ВСД2_РезультатИсследований.VSEFULL;
	КонецЕсли;
	Попытка	Автор = ГМ.ПолучитьАвтора();	Исключение	КонецПопытки;
	Попытка	Филиал = Автор.Филиал;			Исключение	КонецПопытки;
КонецПроцедуры

Процедура ПриОткрытии()

	ГМ._ПриОткрытии(Контекст);

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Площадки");
	Форма.Закладки.ДобавитьЗначение("Товары");
	Форма.Закладки.ДобавитьЗначение("ТТН");

	Форма.Закладки.ТекущаяСтрока(2);
	Форма.ИспользоватьСлой("Шапка, Товары, Подвал");

	//ПриЗаписиПерепроводить(1);

	//Инициализирум список действий по кнопке "Действия"
	СписокДействий = СоздатьОбъект("СписокЗначений");
	СписокДействий.ДобавитьЗначение("Перейти в журнал");
	СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
	СписокДействий.ДобавитьЗначение("Отчет о бухгалтерских проводках");
	СписокДействий.ДобавитьЗначение("Структура подчиненности");
	СписокДействий.ДобавитьЗначение("История");

	ПриСменеВидаВСД();

	АвтоВремяТекущее();
	ДоступностьЭлементов();
	//ГМ = СоздатьОбъект("Меркурий_ГлобальныйМодуль"); = определение перенесено в ПриНачалеРаботыСистемы() Глобальный Модуль конфигурации
КонецПроцедуры

//******************************************************************************
// предопределенная процедура
//
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)

	Если ЗначениеЗакладки="Площадки" Тогда
		Форма.ИспользоватьСлой("Шапка,Площадки,Подвал");
	ИначеЕсли ЗначениеЗакладки="Товары" Тогда
		Форма.ИспользоватьСлой("Шапка,Товары,Подвал");
	ИначеЕсли ЗначениеЗакладки="ТТН" Тогда
		//ОбновитьНадписи();
		Форма.ИспользоватьСлой("Шапка,Подвал,ТТН");
	//ИначеЕсли ЗначениеЗакладки="Результат" Тогда
	//	Форма.ИспользоватьСлой("Шапка,Результат,Подвал");
	КонецЕсли;
	//УстановкаВидимостиСуммВПодвале();

КонецПроцедуры // ПриВыбореЗакладки()

//******************************************************************************
// ПоКнопкеПечать()
//
// Параметры:
//	Нет
//
// Описание:
// 	Вызывается по кнопке "Печать"
//
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)

	Параметры = СоздатьОбъект("СписокЗначений");
	Попытка Параметры.ДобавитьЗначение(?((Модифицированность()=0) и (ПустоеЗначение(ТекущийДокумент())=0), ТекущийДокумент(), ГМ.глВзятьКонтекст(Контекст)), "Контекст"); Исключение КонецПопытки;
	Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
	Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");

	ОткрытьФорму("Отчет", ТекущийДокумент(), ГМ.ПолучитьКонстанту("КаталогМодуля")+"ПечФорма_ВСД2_Входящий.ert");

КонецПроцедуры // ПоКнопкеПечать()

Процедура ОткрытьПартии()
	ОткрытьФормуМодально("Справочник.ВСД_Партия", ТекущийДокумент());
КонецПроцедуры

Процедура ПриВыборе_Продукция_Элемент()
	Продукция = Продукция_Элемент.Продукция;
	ВидПродукции = Продукция_Элемент.ВидПродукции;
	НаименованиеПродукции = Продукция_Элемент.Наименование;

КонецПроцедуры



Процедура ВводНаОсновании(ДокументОснование)
	//ДокументОснование = СоздатьОбъект("Документ.ВСД");

	UUID = ДокументОснование.UUID;
	ВидВСД = 2; // электронный

	Отправитель_ХозСубъект = ДокументОснование.Отправитель_ХозСубъект;
	Отправитель_Площадка = ДокументОснование.Отправитель_Площадка;
	Получатель_ХозСубъект = ДокументОснование.Получатель_ХозСубъект;
	Получатель_Площадка = ДокументОснование.Получатель_Площадка;
	Производитель_Площадка = ДокументОснование.Производитель_Площадка;

	Продукция = ДокументОснование.Продукция;
	ВидПродукции = ДокументОснование.ВидПродукции;
	НаименованиеПродукции = ДокументОснование.НаименованиеПродукции;
	Продукция_Элемент = ДокументОснование.Продукция_Элемент;

	Количество = ДокументОснование.Количество;
	ЕдиницаИзмерения = ДокументОснование.ЕдиницаИзмерения;
	КоличествоМест = ДокументОснование.КоличествоМест;
	ФормаУпаковки = ДокументОснование.ФормаУпаковки;

	ДатаИзготовления1 = ДокументОснование.ДатаИзготовления1;
	ДатаИзготовления2 = ДокументОснование.ДатаИзготовления2;
	//ДатаИзготовленияСтрока = ДокументОснование.ДатаИзготовленияСтрока;

	ДатаСрокГодности1 = ДокументОснование.ДатаСрокГодности1;
	ДатаСрокГодности2 = ДокументОснование.ДатаСрокГодности2;
	//ДатаСрокГодностиСтрока = ДокументОснование.ДатаСрокГодностиСтрока;


КонецПроцедуры

//******************************************************************************
Процедура ПриВыбореХС(Имя, ВыбХС)
	Если Имя = "Отправитель_ХозСубъект" Тогда
		Если Отправитель_Площадка.GuidХозСубъекта <> ВыбХС.GUID Тогда
			Отправитель_Площадка = "";
		КонецЕсли;
	ИначеЕсли Имя = "Получатель_ХозСубъект" Тогда
		Если Получатель_Площадка.GuidХозСубъекта <> ВыбХС.GUID Тогда
			Получатель_Площадка = "";
		КонецЕсли;
	//ИначеЕсли Имя = "Производитель_ХозСубъект" Тогда
	//	УдалитьПроизводителя()
	КонецЕсли;
КонецПроцедуры // ПриВыбореХС

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога,ФлагСтандОбр)
	Если ЭлементДиалога = "Отправитель_Площадка" Тогда
		ВремЭлем = Отправитель_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;
	ИначеЕсли ЭлементДиалога = "Получатель_Площадка" Тогда
		ВремЭлем = Получатель_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;
	КонецЕсли;
КонецПроцедуры // ПриНачалеВыбораЗначения()


Процедура Регионализация()
	УсловияПеревозки="";
	// Глобальный модуль Ветис.2.0
	//ГМ2 = СоздатьОбъект("Меркурий_ГлобальныйМодуль2"); = определение перенесено в ПриНачалеРаботыСистемы() Глобальный Модуль конфигурации
	//ГМ2.Инициализация(ГМ);

	Записать();
	Рез = ГМ2.ПроверитьВозможностьПеремещения( ТекущийДокумент() );
	Если ТипЗначенияСтр(Рез) = "ТаблицаЗначений" Тогда
		Если Рез.КоличествоСтрок() = 0 Тогда
			УсловияПеревозки = "";
			Сообщить("Перевозка разрешена без условий");
		Иначе
			ИмяФайлаРегионализация = ГМ2.ПолучитьИмяФайлаРегионализация( ТекущийДокумент() );
			ЗначениеВФайл(ИмяФайлаРегионализация, Рез);
		КонецЕсли;
	Иначе
		Сообщить("Перевозка разрешена без условий");
	КонецЕсли;
КонецПроцедуры


Процедура ПоказатьУсловияПеревозки()
	Если ПустаяСтрока(ИмяФайлаРегионализация) = 0 Тогда

		Если ФС.СуществуетФайл(ИмяФайлаРегионализация) = 1 Тогда
			стр = "";
			ТзУсловияПеревозки = ЗначениеИзФайла(ИмяФайлаРегионализация);
			ТзУсловияПеревозки.ВыбратьСтроку(стр,"Условия перевозки");
		Иначе
			Предупреждение("Условия перевозки не получены!");
		КонецЕсли;
	Иначе
		Предупреждение("Условия перевозки не получены!");
	КонецЕсли;
КонецПроцедуры


Процедура ДействияВСД()
	//меню
	СписокДействийВСД = СоздатьОбъект("СписокЗначений");
	СписокДействийВСД.ДобавитьЗначение("СписокВСД","Список ВСД");
	СписокДействийВСД.ДобавитьЗначение("ПечатьСокрФормыВСД","Печать сокращенной формы");
	СписокДействийВСД.ДобавитьЗначение("ПечатьПолнойФормыВСД","Печать полной формы");
	СписокДействийВСД.ДобавитьЗначение("ПечатьПолнойФормыВСД_Тест","Печать полной формы ТЕСТ");
	СписокДействийВСД.ДобавитьЗначение("ОткрытьВсдВГис","Открыть ВСД в ГИС");
	СписокДействийВСД.ДобавитьЗначение("АннулироватьВСД","Аннулировать ВСД");
	СписокДействийВСД.ДобавитьЗначение("Регионализация","Запросить условия Перевозки");
	СписокДействийВСД.ДобавитьЗначение("ПоказатьУсловияПеревозки","Показать условия Перевозки");
	СписокДействийВСД.ДобавитьЗначение("ОткрытьЗапрос","Открыть Запрос");
	СписокДействийВСД.ДобавитьЗначение("ОткрытьОтвет","Открыть Ответ");
	СписокДействийВСД.ДобавитьЗначение("ПолучитьОтветВетис","Получить ответ ВЕТИС");

	стр=0; Зн="";
	Если СписокДействийВСД.ВыбратьЗначение(Зн, "", стр, 60, 1) = 1 Тогда

		Записать();

		Если Зн ="ПогаситьВСД"  Тогда
			ГМ.ПогаситьВСД(ТекущийДокумент());
		ИначеЕсли Зн = "ПечатьПолнойФормыВСД" Тогда
			ГМ.ПечатьВСД(ТекущийДокумент());
		ИначеЕсли Зн = "ПечатьПолнойФормыВСД_Тест" Тогда
			ГМ.ПечатьВСД_Тест(ТекущийДокумент());
		ИначеЕсли Зн = "ОткрытьВсдВГис" Тогда
			ГМ.ОткрытьВсдВГис( ТекущийДокумент() );
		ИначеЕсли Зн = "СписокВСД" Тогда
			ГМ.ОткрытьСписокВсд( ТекущийДокумент() );
		ИначеЕсли Зн = "АннулироватьВСД" Тогда
		   	ПараПараметров = СоздатьОбъект("СписокЗначений");
		   	ПараПараметров.Установить("КонтекстДокумента", Контекст);
			ПараПараметров.Установить("Действие", "Аннулировать");
		   	ОткрытьФорму("Отчет", ПараПараметров, ГМ.ПолучитьКонстанту("КаталогМодуля")+"ВСД_ОтправкаИзФормы.ert");
		ИначеЕсли Зн = "ОткрытьЗапрос" Тогда
			ГМ.ОткрытьЗапрос( ТекущийДокумент() );
		ИначеЕсли Зн = "ОткрытьОтвет" Тогда
			ГМ.ОткрытьОтвет( ТекущийДокумент() );
		ИначеЕсли Зн = "Регионализация" Тогда
			Регионализация();
		ИначеЕсли Зн = "ПоказатьУсловияПеревозки" Тогда
			ПоказатьУсловияПеревозки();
		ИначеЕсли Зн = "ПечатьСокрФормыВСД" Тогда
   			ОткрытьФорму("Отчет", ТекущийДокумент(), ГМ.ПолучитьКонстанту("КаталогМодуля")+"ПечФорма_ВСД_Сокращенная.ert");
		ИначеЕсли Зн = "ПолучитьОтветВетис" Тогда
		   	ПараПараметров = СоздатьОбъект("СписокЗначений");
		   	ПараПараметров.Установить("КонтекстДокумента", Контекст);
			ПараПараметров.Установить("Действие", "ПолучитьОтвет");
		   	ОткрытьФорму("Отчет", ПараПараметров, ГМ.ПолучитьКонстанту("КаталогМодуля")+"ВСД_ОтправкаИзФормы.ert");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


Типытранспорта = СоздатьОбъект("СписокЗначений");
Типытранспорта.ДобавитьЗначение("Автомобильный", "1");
Типытранспорта.ДобавитьЗначение("Железнодорожный", "2");
Типытранспорта.ДобавитьЗначение("Авиатранспортный", "3");
Типытранспорта.ДобавитьЗначение("Морской (контейнерная партия)", "4");
Типытранспорта.ДобавитьЗначение("Морской (трюмная партия)", "5");
Типытранспорта.ДобавитьЗначение("Речной", "6");
Типытранспорта.ДобавитьЗначение("Перегон", "7");

ТипыТТН = СоздатьОбъект("СписокЗначений");
ТипыТТН.ДобавитьЗначение("Отсутствует", "0");
ТипыТТН.ДобавитьЗначение("ТТН", "1");
ТипыТТН.ДобавитьЗначение("Коносамент", "2");
ТипыТТН.ДобавитьЗначение("CMR", "3");
ТипыТТН.ДобавитьЗначение("Авианакладная", "4");
ТипыТТН.ДобавитьЗначение("ТрН", "5");
//ТипыТТН.ДобавитьЗначение("Речной", "6");
//ТипыТТН.ДобавитьЗначение("Перегон", "7");
