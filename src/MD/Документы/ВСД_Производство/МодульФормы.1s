 //+phsin@КБ99, 2016-08-15 15:02:17
Перем СписокДействий; // для механизма кнопки "Действия"
Перем ВыбФирма;


Процедура ПриВыбореФирмы()
	попытка
		ГМ.Инициализация(Контекст);
		Производитель_ХозСубъект = ГМ.СписокКонстант.Получить("Отправитель_ХозСубъект");
		Производитель_Площадка = ГМ.СписокКонстант.Получить("Отправитель_Площадка");
		Экспертиза = ГМ.СписокКонстант.Получить("ВСД_Экспертиза");
		Местность = ГМ.СписокКонстант.Получить("ВСД_Местность");
		Особыеотметки = ГМ.СписокКонстант.Получить("ВСД_ОсобыеОтметки");
	Исключение

	КонецПопытки

КонецПроцедуры

//======================================================================
Процедура ПриИзмененииСФ()
	Если СписокФирм.ТекущаяСтрока() <> 0 Тогда
		ВыбФирма = СписокФирм.ПолучитьЗначение(СписокФирм.ТекущаяСтрока());

		ФирмаИмяРеквизита = "";
		ГМ.ПолучитьИмяРеквизитаФирма(Вид(), ФирмаИмяРеквизита);
		Попытка УстановитьАтрибут(ФирмаИмяРеквизита, ВыбФирма);  Исключение КонецПопытки;

		ПриВыбореФирмы();
	КонецЕсли;
КонецПроцедуры // ПриИзмененииСФ

//*****************************************************************************
// ПоКнопкеОснование()
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Описание:
// 	Вызывается по кнопке выбора документа основания
//
Процедура ПоКнопкеОснование()

	Перем Основание;

	// если документ основание уже есть, откроем его
	Если ПустоеЗначение(ДокОснование) = 0 Тогда
		ОткрытьФорму(ДокОснование);
		Возврат;
	КонецЕсли;

КонецПроцедуры

Процедура ВводНового(Скопирован)
	UUID = "";
	applicationID = "";
	Статус = "";
	Если Скопирован = 0 Тогда
		Попытка
			Фирма = ГМ.глЗначениеПоУмолчанию("ОсновнаяФирма");
			ПриВыбореФирмы();
		Исключение КонецПопытки;
	Конецесли;

	Автор = ГМ.ПолучитьАвтора();
	Попытка	Филиал = Автор.Филиал;			Исключение	КонецПопытки;
КонецПроцедуры

Процедура ПриОткрытии()

	ГМ._ПриОткрытии(Контекст);

	//ПриЗаписиПерепроводить(1);

	//Инициализирум список действий по кнопке "Действия"
	СписокДействий = СоздатьОбъект("СписокЗначений");
	СписокДействий.ДобавитьЗначение("Перейти в журнал");
	СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
	СписокДействий.ДобавитьЗначение("Отчет о бухгалтерских проводках");
	СписокДействий.ДобавитьЗначение("Структура подчиненности");
	СписокДействий.ДобавитьЗначение("История");

	Если Проведен()=1 Тогда
		Форма.ТолькоПросмотр(1);
		Форма.кнПриход.Доступность(0);
		Форма.кнРасход.Доступность(0);
	КонецЕсли;

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной");
	Форма.Закладки.ДобавитьЗначение("ТабличнаяЧасть");

	//глАктивизироватьРеквизит(Контекст);
	Форма.Закладки.ТекущаяСтрока(1);
	Форма.ИспользоватьСлой("Шапка,Основной,Подвал");

КонецПроцедуры


//******************************************************************************
// предопределенная процедура
//
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)

	Если ЗначениеЗакладки="Основной" Тогда
		Форма.ИспользоватьСлой("Шапка,Основной,Подвал");
	ИначеЕсли ЗначениеЗакладки="ТабличнаяЧасть" Тогда
		Форма.ИспользоватьСлой("Шапка,ТабличнаяЧасть,Подвал");
	КонецЕсли;

КонецПроцедуры // ПриВыбореЗакладки()


//******************************************************************************
// ПоКнопкеПечать()
//
// Параметры:
//	Нет
//
// Описание:
// 	Вызывается по кнопке "Печать"
//
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)

	Параметры = СоздатьОбъект("СписокЗначений");
	Попытка Параметры.ДобавитьЗначение(?((Модифицированность()=0) и (ПустоеЗначение(ТекущийДокумент())=0), ТекущийДокумент(), ГМ.глВзятьКонтекст(Контекст)), "Контекст"); Исключение КонецПопытки;
	Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
	Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");

	ОткрытьФорму("Отчет", ТекущийДокумент(), ГМ.ПолучитьКонстанту("КаталогМодуля")+"ПечФорма_ВСД_Производство.ert");

КонецПроцедуры // ПоКнопкеПечать()


//******************************************************************************
// Предопределенная процедура
//

Функция НайтиВСД_Производство(Докум)
	//Продумать, что делать с Rejected Документами
	Рез ="";

	ДокТ = СоздатьОбъект("Документ");
	ДокТ.ВыбратьПодчиненныедокументы(,,Докум.ТекущийДокумент());
	Пока ДокТ.ПолучитьДокумент()=1 Цикл
	    Если (ДокТ.Вид() = "ВСД_Производство") и (ДокТ.ПометкаУдаления()=0) Тогда
			Если (ПустоеЗначение(ДокТ.Статус)=1) или (СокрЛП(докТ.Статус) = "COMPLETED") Тогда
	        	Рез = ДокТ.текущийДокумент();
				Прервать;
			КонецЕсли;
	    КонецЕсли;
	КонецЦикла;

	Возврат Рез;
КонецФункции // ()


Функция ЗаполнитьВСДПроизводство(ДокР,ТЗЭлементов)


	// заполнение кастомного ВСД  - ЖД Доработать в этом случае отменить Ввод на основании и открыть Созданный док
	Если ФС.СуществуетФайл(ГМ.ПолучитьКонстанту("КаталогМодуля")+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_Производство.ert")=1 Тогда
		//{ переопределение функции создания ВСД
			// интеграция переопределяется в Меркурий_Подключаемый_Создание_ВСД_Производство.ert
			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров.ДобавитьЗначение(ДокР.ТекущийДокумент(),				"ДокОснование");
			СписокПараметров.ДобавитьЗначение(Производитель_ХозСубъект,	"Производитель_ХозСубъект");
			СписокПараметров.ДобавитьЗначение(Производитель_Площадка,	"Производитель_Площадка");
			СписокПараметров.ДобавитьЗначение( ГМ.СписокКонстант.Получить("ВСД_Экспертиза"),		"ВСД_Экспертиза");
			СписокПараметров.ДобавитьЗначение( ГМ.СписокКонстант.Получить("ВСД_Местность"),		"ВСД_Местность");
			СписокПараметров.ДобавитьЗначение( ГМ.СписокКонстант.Получить("ВСД_ОсобыеОтметки"),	"ВСД_ОсобыеОтметки");
			СписокПараметров.ДобавитьЗначение( ДокР.ДатаДок,				"НачДата");
			СписокПараметров.ДобавитьЗначение( ДокР.ДатаДок,				"КонДата");
			СписокПараметров.ДобавитьЗначение( ТЗЭлементов ,				"ТЗПродукция_Элемент");

			ОткрытьФормуМодально("Отчет",СписокПараметров,ГМ.ПолучитьКонстанту("КаталогМодуля")+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_Производство.ert");

			ДокументСсылка = "";

			Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда
				ДокументСсылка = СписокПараметров.Получить("ДокументСсылка");
			КонецЕсли;

			Если ПустоеЗначение(ДокументСсылка)=1 Тогда
				Предупреждение("В подключаемом модуле не удалось создать ВСД","!");
				Возврат "";
			Иначе
				Возврат ДокументСсылка;
			КонецЕсли;
			//}
	Иначе
		ДокОснование = ДокР.ТекущийДокумент();
		ДатаДок = ДокОснование.ДатаДок;
		//Производитель_ХозСубъект = ГМ.СписокКонстант.Получить("Отправитель_ХозСубъект");
		//Производитель_Площадка = ГМ.СписокКонстант.Получить("Отправитель_Площадка");
		ЗавершитьОперацию = 1;
		Местность 		= ГМ.СписокКонстант.Получить("ВСД_Местность");
		ОсобыеОтметки 	= ГМ.СписокКонстант.Получить("ВСД_ОсобыеОтметки");
		Экспертиза 		= ГМ.СписокКонстант.Получить("ВСД_Экспертиза");

		cargoExpertized  = 1;
		cargoInspected  	= 1;
		ТЗЭлементов.ВыбратьСтроки();
		Пока ТЗЭлементов.ПолучитьСтроку() = 1 Цикл
			НоваяСтрока();
			Продукция_Элемент 	= ТЗЭлементов.ВСД_Продукция_Элемент;
			Количество 			= ТЗЭлементов.Количество;
			ЕдиницаИзмерения 	= Продукция_Элемент.ЕдиницаИзмерения;
			Продукция 			= Продукция_Элемент.Продукция;
			ВидПродукции 		= Продукция_Элемент.ВидПродукции;
			ВидДвижения 			= 1;
			НаименованиеПродукции = Продукция_Элемент.Наименование;
			ДатаИзготовления1 = ДатаДок;
			ДатаСрокГодности1 = ДатаИзготовления1+Продукция_Элемент.СрокГодности;
		КонецЦикла;

        Если КоличествоСтрок()=0 Тогда
            Предупреждение("Нет элементов для создания!","!!");
        КонецЕсли;
		Возврат "";
	КонецЕсли;
КонецФункции

Функция ОбработатьОснование(Докум)
	Рез = "";
	Если ПустоеЗначение(Докум) = 1 Тогда
	    Возврат Рез;
	КонецЕсли;
// в стандарте д.б. Контрагент - самопис - все что угодно
// Либо для исключения ошибки искать ХС по Площадке - по реквизиту GUIDХозСубъекта
	Возврат 1;

КонецФункции // ОбработатьОснование()

//******************************************************************************
// Предопределенная процедура
//
Процедура ВводНаОсновании(ДокументОснование)

	// Поищем есть ли уже введенный и проведенный
	Рез = НайтиВСД_Производство(ДокументОснование);
	Если ПустоеЗначение(Рез) =  0 Тогда
		ОткрытьФорму(Рез,"");
		СтатусВозврата(0); Возврат;
	КонецЕсли;

	Если ГМ._ВводНаОсновании(Контекст, ДокументОснование) = 0 Тогда
	    СтатусВозврата(0); Возврат;
	КонецЕсли;

    ТЗЭлементов = ГМ.СвернутьТЧ(ДокументОснование);

	ДокСсылка = ЗаполнитьВСДПроизводство(ДокументОснование,ТЗЭлементов);
	Если ПустоеЗначение(ДокСсылка)  = 0 Тогда
		ОткрытьФорму(ДокСсылка);
	    СтатусВозврата(0); Возврат;
	КонецЕсли;

КонецПроцедуры // ВводНаОсновании()


Процедура ПриВыбореПартии()
	Если ВидДвижения = 1 Тогда
		Партия = "";
		Возврат;
	КонецЕсли;

	Продукция = Партия.Продукция;
	ВидПродукции = Партия.ВидПродукции;
	ЕдиницаИзмерения = Партия.ЕдиницаИзмерения;
	ФормаУпаковки = Партия.ФормаУпаковки;
	НаименованиеПродукции = Партия.НаименованиеПродукции;
	Продукция_Элемент = Партия.Продукция_Элемент;
КонецПроцедуры


Процедура ПриВводеСтроки()
	СтатусВозврата(0);
КонецПроцедуры

Процедура ДобавитьПриход()
	НоваяСтрока();
	ВидДвижения = 1;
КонецПроцедуры

Процедура ДобавитьРасход()
	НоваяСтрока();
	ВидДвижения = 2;
КонецПроцедуры

Функция ПоказатьЗнакДвижения()
	Если ВидДвижения=1 Тогда
		Возврат "+";
	Иначе
		Возврат "-";
	КонецЕсли;
КонецФункции

Процедура ОткрытьВСД()
	тз = СоздатьОбъект("ТаблицаЗначений");
	тз.НоваяКолонка("ВСД",,,,,50);

	Док = СоздатьОбъект("Документ");
	Док.ВыбратьПодчиненныеДокументы(ДатаДок, ДатаДок, ТекущийДокумент());
	Пока Док.ПолучитьДокумент() = 1 Цикл
		тз.НоваяСтрока();
		тз.ВСД = Док.ТекущийДокумент();
	КонецЦикла;

	стр=0;
	Если тз.ВыбратьСтроку(стр,"ВСД")=1 Тогда
		тз.ПолучитьСтрокуПоНомеру(стр);
		ОткрытьФорму(тз.ВСД);
	КонецЕсли;
КонецПроцедуры

Процедура ОткрытьПартии()
	ОткрытьФормуМодально("Справочник.ВСД_Партия", ТекущийДокумент());
КонецПроцедуры



Процедура ЗавершитьОперацию()
	Если ЗавершитьОперацию=0 Тогда
		Если operationId="" Тогда
			operationId=НомерДок;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура Отправить()

	Если Проведен()=1 Тогда
		Возврат;
	КонецЕсли;
	Если ПометкаУдаления()=1 Тогда
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(applicationID)=0 Тогда
		Если Вопрос("Документ уже был отправлен, отправить ПОВТОРНО?",4,30)<>6 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Записать();
	Если (Модифицированность()=0) и (ПустоеЗначение(ТекущийДокумент())=0) Тогда

	иначе
		Предупреждение("Запишите документ");
		Возврат;
	КонецЕсли;

	ЗаписьЖурналаРегистрации("Меркурий отправка ВСД транзакция "+НомерДок+" от "+ДатаДок);

	ПараПараметров = СоздатьОбъект("СписокЗначений");
	ПараПараметров.Установить("КонтекстДокумента", Контекст);
	ПараПараметров.Установить("ГМ", ГМ);

	ОткрытьФорму("Отчет", ПараПараметров, ГМ.ПолучитьКонстанту("КаталогМодуля")+"ВСД_ОтправкаИзФормы.ert");

КонецПроцедуры


//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога,ФлагСтандОбр)
	Если ЭлементДиалога = "Производитель_площадка" Тогда
		ВремЭлем = Производитель_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;
    ИначеЕсли ЭлементДиалога = "Партия" Тогда
        парам = создатьОбъект("СписокЗначений");
        Парам.Установить("ВСД_Продукция_Элемент",Продукция_Элемент);
        Парам.Установить("Площадка",Производитель_площадка);
		Парам.Установить("ХозСубъект",Производитель_ХозСубъект);
        ОткрытьФорму("Справочник.ВСД_Партия", Парам);
        ФлагСтандОбр = 0;
	ИначеЕсли Найти(ЭлементДиалога, "Дата") <> 0 Тогда
		Рез = "";
		Если ВвестиДату(Рез,"",)=1 Тогда
			УстановитьАтрибут(ЭлементДиалога, ГМ.Преобразовать_Дата_в_Строка(Рез) );
		КонецЕсли;
        ФлагСтандОбр = 0;
	КонецЕсли;
КонецПроцедуры // ПриНачалеВыбораЗначения()

//******************************************************************************
Процедура ПриВыбореХС(Имя, ВыбХС)
	Если Имя = "Производитель_ХозСубъект" Тогда
		Если Производитель_площадка.GuidХозСубъекта <> ВыбХС.GUID Тогда
			Производитель_площадка = "";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПриВыбореХС

Процедура ПриВыбореПродукция_Элемент()
	Продукция = Продукция_Элемент.Продукция;
	ВидПродукции = Продукция_Элемент.ВидПродукции;
	НаименованиеПродукции = Продукция_Элемент.Наименование;
	ЕдиницаИзмерения = Продукция_Элемент.ЕдиницаИзмерения;
	ФормаУпаковки = Продукция_Элемент.ФормаУпаковки;

КонецПроцедуры

Процедура ДействияВСД()
	//меню
	СписокДействийВСД = СоздатьОбъект("СписокЗначений");
	//СписокДействийВСД.ДобавитьЗначение("СписокВСД","Список ВСД");
	СписокДействийВСД.ДобавитьЗначение("ОткрытьВсдВГис","Открыть ВСД в ГИС");
	СписокДействийВСД.ДобавитьЗначение("ОтправитьВСД","Отправить ВСД");
	СписокДействийВСД.ДобавитьЗначение("АннулироватьВСД","Аннулировать ВСД");
	СписокДействийВСД.ДобавитьЗначение("ОткрытьЗапрос","Открыть Запрос");
	СписокДействийВСД.ДобавитьЗначение("ОткрытьОтвет","Открыть Ответ");
	//СписокДействийВСД.ДобавитьЗначение("Мультимодальная","Мультимодальная перевозка");
	СписокДействийВСД.ДобавитьЗначение("ПолучитьОтветВетис","Получить ответ ВЕТИС");

	стр=0; Зн="";
	Если СписокДействийВСД.ВыбратьЗначение(Зн, "", стр, 60, 1) = 1 Тогда

		Записать();

		// ?
		ГМ.Инициализация(Контекст);

		Если Зн = "ОткрытьВсдВГис" Тогда
			ГМ.ОткрытьВсдВГис( ТекущийДокумент() );
		ИначеЕсли Зн = "СписокВСД" Тогда
			ГМ.ОткрытьСписокВсд( ТекущийДокумент() );
		ИначеЕсли Зн = "ОтправитьВСД" Тогда
			Отправить();
		ИначеЕсли Зн = "АннулироватьВСД" Тогда
		   	ПараПараметров = СоздатьОбъект("СписокЗначений");
		   	ПараПараметров.Установить("КонтекстДокумента", Контекст);
		   	ПараПараметров.Установить("ГМ", ГМ);
			ПараПараметров.Установить("Действие", "Аннулировать");
		   	ОткрытьФорму("Отчет", ПараПараметров, ГМ.ПолучитьКонстанту("КаталогМодуля")+"ВСД_ОтправкаИзФормы.ert");
		ИначеЕсли Зн = "ОткрытьЗапрос" Тогда
			ГМ.ОткрытьЗапрос( ТекущийДокумент() );
		ИначеЕсли Зн = "ОткрытьОтвет" Тогда
			ГМ.ОткрытьОтвет( ТекущийДокумент() );
		ИначеЕсли Зн = "ПолучитьОтветВетис" Тогда
		   	ПараПараметров = СоздатьОбъект("СписокЗначений");
		   	ПараПараметров.Установить("КонтекстДокумента", Контекст);
		   	ПараПараметров.Установить("ГМ", ГМ);
			ПараПараметров.Установить("Действие", "ПолучитьОтвет");
		   	ОткрытьФорму("Отчет", ПараПараметров, ГМ.ПолучитьКонстанту("КаталогМодуля")+"ВСД_ОтправкаИзФормы.ert");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

ВыбФирма = "";