Перем Неопределено;

Перем оПривязки;
Перем тпЗакладки;
Перем тпОтбор;
Перем тпТМЦ, тзТМЦ;
Перем ПредыдущийЭлемент;

Функция Этот(Конт) 	Возврат Конт; КонецФункции
Функция Сам() 	Возврат Этот(Контекст); КонецФункции


///******************************** ADirks 06.12.2019 ************
Процедура ПриОтжатииЛевойКнопки(Сост, Лево, Верх, ФСО) Экспорт
	Если тпОтбор <> Неопределено Тогда
		Если тпОтбор._ПриОтжатииЛевойКнопки(Сост, Лево, Верх, ФСО) = 1 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
///******************************** ADirks 06.12.2019 ************

///******************************** ADirks 21.11.2019 ************
Процедура тпОтбор_Инит()
	тпОтбор = СоздатьОбъект("Меркурий.ТабличноеПоле.Фильтр.ФормаСписка");
	тпОтбор.Инит(Контекст, "тпОтбор", "ВСД_Продукция_Элемент");
	
	тпОтбор.Добавить("ТолькоАктуальные", "Только актуальные", "Флаг", "Спр.IsMark = 0 AND $Спр.active = 1", "Спр.ISMARK = ''");
	тпОтбор.ДобавитьПоКолонке("Наименование");
	тпОтбор.ДобавитьПоКолонке("Площадка");
	тпОтбор.ДобавитьПоКолонке("Продукция");
	тпОтбор.ДобавитьПоКолонке("ВидПродукции", "Вид продукции");
	тпОтбор.Добавить("ОтборПоНоменклатуре", "Отбор по номенклатуре", "Справочник.Номенклатура", "СпрНом.ParentExt",,
		"LEFT JOIN $Справочник.ВСД_Номенклатура_Соответсвия СпрНом ON $СпрНом.ВСД_Продукция_Элемент = Спр.ID AND СпрНом.ISMARK = 0",
		"LEFT JOIN [Справочник.ВСД_Номенклатура_Соответсвия] СпрНом ON СпрНом.ВСД_Продукция_Элемент = Спр.ID AND СпрНом.ISMARK = ''"
	);

	тпОтбор.Пометка("ТолькоАктуальные", 1);
	
	тпОтбор.Владелец("ВидПродукции", "Продукция");

	тпОтбор.ВосстановитьНастройки();
	
	Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
		тпОтбор.фНеСохранятьНастройкиФильтров = 1;
		сзПарам = Форма.Параметр;
		тпОтбор.Значение("Продукция", сзПарам.Получить("Продукция"));
		тпОтбор.Значение("ВидПродукции", сзПарам.Получить("ВидПродукции"));
	КонецЕсли;


	тпОтбор.Показать();
	тпОтбор.ОбновитьСтроки();

	тпОтбор.УстановитьОтбор();
КонецПроцедуры
///******************************** ADirks 21.11.2019 ************



//======================================================================
Процедура кнПодборВыбор()
	Перем ТекТМЦ;
	текЭлемент=ТекущийЭлемент();
	Если ТекущийЭлемент().Выбран()=0 Тогда Возврат; КонецЕсли;

	Если Число(тпТМЦ.ТекущаяСтрока) > 0 Тогда
		ТекТМЦ = тзТМЦ.ПолучитьЗначение(тпТМЦ.ТекущаяСтрока, "Номенклатура");
	КонецЕсли;
	ОткрытьПодбор("Справочник.Номенклатура", "ДляВыбора", , 1, ТекТМЦ);
КонецПроцедуры // кнПодборВыбор()

//======================================================================
Процедура ОбработкаПодбора(ВыбЗнач)
	Перем Стр;
	Если тзТМЦ.НайтиЗначение(ВыбЗнач, Стр, "Номенклатура") <> 0 Тогда
		Предупреждение("Данный элемент уже выбран.",20); Возврат;
	Иначе
		ГМ.УстановитьСоответсвие_Номенклатура_Продукция_Элемент( ВыбЗнач, ТекущийЭлемент() );
	
		тзТМЦ.НоваяСтрока();
		тзТМЦ.Наименование = ВыбЗнач.Наименование;
		тзТМЦ.Номенклатура = ВыбЗнач;
		
		тпТМЦ.ОбновитьСтроки();
		тпТМЦ.ТекущаяСтрока = тзТМЦ.КоличествоСтрок();
	КонецЕсли;
КонецПроцедуры // ОбработкаПодбора()

//******************************************************************************
Процедура кнУдалитьВыбор()
	Перем ТекТМЦ;
	Если ТекущийЭлемент().Выбран()=0 Тогда Возврат; КонецЕсли;

	Если Число(тпТМЦ.ТекущаяСтрока) > 0 Тогда
		ТекТМЦ = тзТМЦ.ПолучитьЗначение(тпТМЦ.ТекущаяСтрока, "Номенклатура");
		
		ГМ.УдалитьСоответсвие_Номенклатура_Продукция_Элемент( ТекТМЦ, ТекущийЭлемент() );

		тзТМЦ.УдалитьСтроку(тпТМЦ.ТекущаяСтрока);
		тпТМЦ.ОбновитьСтроки();
	КонецЕсли;
	
КонецПроцедуры // кнУдалитьВыбор()

//******************************************************************************
Процедура кнУдалитьВсеВыбор()
	Если тзТМЦ.КоличествоСтрок() > 0 Тогда
		Если Вопрос("Удалить все строки?","Да+Нет",10) = "Да" Тогда
			
			СписокТМЦ = СоздатьОбъект("СписокЗначений");
			тзТМЦ.Выгрузить(СписокТМЦ,,,"Номенклатура");
			Спр = СоздатьОбъект("Справочник.Номенклатура");
			Для СЦ = 1 По СписокТМЦ.РазмерСписка() Цикл
				ТекТМЦ = СписокТМЦ.ПолучитьЗначение(СЦ);
				ГМ.УдалитьСоответсвие_Номенклатура_Продукция_Элемент( ТекТМЦ, ТекущийЭлемент() );
			КонецЦикла;
			
			СписокТМЦ.УдалитьВсе();
			тзТМЦ.УдалитьСтроки();
			тпТМЦ.ОбновитьСтроки();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // кнУдалитьВсеВыбор()


//======================================================================
Процедура тпТМЦВыбор(ТабличноеПоле, Стр, Колонка, ТипРегиона)
	Если ТипРегиона = 3 Тогда
		ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, тзТМЦ);
		Если ТекущийЭлемент().ЭтоГруппа() = 0 Тогда
			ОткрытьФорму(тзТМЦ.Номенклатура);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ПриВыбореОбъектаЗакладки()
	Если ПустоеЗначение(тпЗакладки)=1 Тогда Возврат; КонецЕсли;
	стрИмяЗакладки=тпЗакладки.ТекущаяКолонка.Имя;
	текЭлемент=ТекущийЭлемент();
	
	Если стрИмяЗакладки="Отбор" Тогда
		Форма.ИспользоватьСлой("Общий,Отбор", 2);
	ИначеЕсли стрИмяЗакладки="ОбщаяИнформация" Тогда
	ИначеЕсли стрИмяЗакладки="ТМЦ" Тогда
		Если текЭлемент.Выбран() = 0 Тогда Возврат;
		КонецЕсли;
		тзТМЦ.УдалитьСтроки();

		Если ГМ.ЭтоSQL = 1 Тогда
			ТекстЗапроса = "
				|SELECT СпрН.DESCR Наименование
				|	, Спр.ParentExt [Номенклатура $Справочник.Номенклатура]
				|FROM $Справочник.ВСД_Номенклатура_Соответсвия as Спр
				|LEFT JOIN $Справочник.Номенклатура as СпрН
				|	ON СпрН.ID =  Спр.ParentExt
				|WHERE $Спр.ВСД_Продукция_Элемент = :ВыбЭлемент
				|		AND Спр.ISMARK =0 
				|ORDER BY Спр.DESCR";

			ГМ.RS.УстановитьТекстовыйПараметр("ВыбЭлемент", ТекущийЭлемент());
				
			ТЗ = ГМ.RS.ВыполнитьИнструкцию(ТекстЗапроса);
		Иначе
			ТекстЗапроса = "
				|SELECT Спр.DESCR Наименование
				|	, Спр.ParentExt [Номенклатура $Справочник.Номенклатура]
				|FROM [Справочник.ВСД_Номенклатура_Соответсвия] as Спр
				|WHERE Спр.ВСД_Продукция_Элемент = :ВыбЭлемент
				|		AND Спр.ISMARK ='' 
				|ORDER BY Спр.DESCR";

			Запрос = ГМ.базаДанных.НовыйЗапрос();
			Запрос.Подставлять("ВыбЭлемент", ТекущийЭлемент());
				
			ТЗ = Запрос.ВыполнитьЗапрос(ТекстЗапроса);
		КонецЕсли;

		тзТМЦ.Загрузить(тз);
		тпТМЦ.ОбновитьСтроки();
		Форма.ИспользоватьСлой("Общий,ТМЦ", 2);
	КонецЕсли;
КонецПроцедуры

//======================================================================
Функция ПриОбновленииФормы()
	текЭлемент=ТекущийЭлемент();
	Если текЭлемент.Выбран()=0 Тогда Возврат ""; КонецЕсли;
	Если ПредыдущийЭлемент=текЭлемент Тогда Возврат ""; КонецЕсли;
	ПредыдущийЭлемент=текЭлемент;

    ПриВыбореОбъектаЗакладки();
КонецФункции


//======================================================================
Процедура тпЗакладкиПриВыбореЗаголовка(тпЗакладки, ОбъектКолонка)
	ГМ._ЗакладкиВыбор(тпЗакладки, ОбъектКолонка);
	ПриВыбореОбъектаЗакладки();
КонецПроцедуры

Процедура ПриНачалеВыбораЗначения(Имя, ФСО)
	Если тпОтбор.ПриНачалеВыбораЗначения(Имя, ФСО) = 1 Тогда
		//уже отработано
	Иначе
		
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ПриОткрытии()
	ГМ._ПриОткрытии(Контекст);

	Если Форма.МодальныйРежим() = 0 Тогда
		Попытка
			
			оПривязки.Привязка("тпЗакладки,рамкаЗакладки", "T", "Форма", "W", "Форма");
			оПривязки.Привязка("кнПодбор,кнУдалить,кнУдалитьВсе", "T", "Форма", "L", "Форма");
			оПривязки.Привязка("тпОтбор,тпТМЦ", "T", "Форма", "W", "кнПодбор");
			оПривязки.Привязка("МногострочнаяЧасть","H","Форма","W","Форма");
			оПривязки.Привязка("ДеревоГруппФормыСпискаСправочника","H","Форма");
			оПривязки.Привязка("кнЗакрыть","T","Форма");
		Исключение
			Сообщить("Справочник ВСД_Продукция_Элемент - Не удалось инициализировать привязки");
		КонецПопытки;
	КонецЕсли;

КонецПроцедуры // ПриОткрытии

//======================================================================
Процедура ПослеСозданияФормы()
	// Закладки
	спЗакладки=СоздатьОбъект("СписокЗначений");
	спЗакладки.ДобавитьЗначение("Отбор", "Отбор");
	спЗакладки.ДобавитьЗначение("ТМЦ", "Номенклатура");

	ОбъектФорма=СоздатьОбъект("Форма");
	ОбъектФорма.УстановитьФорму(Форма);

	тпЗакладки=ОбъектФорма.СоздатьЭлементУправления("ТабличноеПоле",Форма.тпЗакладки);
	ГМ._ЗакладкиЗаполнить(тпЗакладки, спЗакладки);

	тпОтбор_Инит();
	
	// ТМЦ
	тзТМЦ = СоздатьОбъект("ТаблицаЗначений");
	тзТМЦ.НоваяКолонка("Наименование",,,,"Наименование",30);
	тзТМЦ.НоваяКолонка("Номенклатура");

	тпТМЦ=ГМ.СоздатьТабличноеПоле(Контекст, "тпТМЦ", тзТМЦ, 0);
	
	ПриВыбореОбъектаЗакладки();	
КонецПроцедуры

//======================================================================
Процедура ПриЗакрытии()
	Если тпОтбор <> Неопределено Тогда
		тпОтбор.СохранитьНастройки();
	КонецЕсли;
КонецПроцедуры
	
//======================================================================
Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	ГМ._ПриИзмененииРазмераОкна(Контекст, ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры

//======================================================================
Процедура ПослеОткрытия()	
	ГМ._ПослеОткрытия(Контекст);
КонецПроцедуры
