// 	Количество единиц упаковки. - считаем что этот реквизит - коэфф перевода от единицы измерения продукции
// Объем 1 единицы фасовки
Перем оПривязки;

Процедура Создать()
	
	Записать();

	Если ПометкаУдаления()=1 Тогда 
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(GUID)=0 Тогда 
		Если Вопрос("Документ уже был отправлен, отправить ПОВТОРНО?",4,30)<>6 Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации("Меркурий отправка в ГИС Меркурий "+Код);
	
   ПараПараметров = СоздатьОбъект("СписокЗначений");
   ПараПараметров.Установить("Контекст", Контекст);
   ПараПараметров.Установить("Операция", "CREATE");
    
   ОткрытьФорму("Отчет", ПараПараметров, ГМ.ПолучитьКонстанту("КаталогМодуля")+"ВСД_ОтправкаИзФормы_Справочник.ert");
   	
КонецПроцедуры

Процедура Изменить()

	Записать();
	
	Если ПометкаУдаления()=1 Тогда 
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(GUID)=0 Тогда 
		Если Вопрос("Документ уже был отправлен, отправить ПОВТОРНО?",4,30)<>6 Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;

	ЗаписьЖурналаРегистрации("Меркурий отправка в ГИС Меркурий "+Код);
	
   ПараПараметров = СоздатьОбъект("СписокЗначений");
   ПараПараметров.Установить("Контекст", Контекст);
   ПараПараметров.Установить("Операция", "UPDATE");
   ОткрытьФорму("Отчет", ПараПараметров, ГМ.ПолучитьКонстанту("КаталогМодуля")+"ВСД_ОтправкаИзФормы_Справочник.ert");
   	
КонецПроцедуры 

//======================================================================
Процедура ПриИзмененииСкоропорт()
	
	Если Скоропортящийся=1 Тогда 
		Форма.СрокГодностиЧасов.Доступность(1);
	Иначе
		СрокГодностиЧасов=0;
		Форма.СрокГодностиЧасов.Доступность(0);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьИзМеркурий()

	Записать();
	
	//Если ПометкаУдаления()=1 Тогда 
	//	Возврат;
	//КонецЕсли;
	Если ПустоеЗначение(GUID)=1 Тогда
		Предупреждение("Получить информацию о продукции можно только при наличии GUID");
		Возврат;
	Иначе
		Если Вопрос("Загрузить сведения из Меркурий?",4,30)<>6 Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;

	ЗаписьЖурналаРегистрации("Меркурий отправка в ГИС Меркурий "+Код);
	
	ПараПараметров = СоздатьОбъект("СписокЗначений");
	ПараПараметров.Установить("Контекст", Контекст);
	ПараПараметров.Установить("Операция", "");
	ОткрытьФорму("Отчет", ПараПараметров, ГМ.ПолучитьКонстанту("КаталогМодуля")+"ВСД_ОтправкаИзФормы_Справочник.ert");
   	
КонецПроцедуры

//******************************************************************************
Процедура кнПодборВыбор()
	Перем ТекТМЦ;         
	Если Выбран() = 1 Тогда
		Если СписокТМЦ.ТекущаяСтрока() > 0 Тогда
			ТекТМЦ = СписокТМЦ.ПолучитьЗначение(СписокТМЦ.ТекущаяСтрока());
		КонецЕсли;
		ОткрытьПодбор("Справочник.Номенклатура", "ДляВыбора", , 1, ТекТМЦ);
	Иначе
		Предупреждение("Элемент не записан!");
	КонецЕсли;
КонецПроцедуры // кнПодборВыбор()

//******************************************************************************
Процедура кнУдалитьВыбор()

	Если СписокТМЦ.ТекущаяСтрока() > 0 Тогда
		ТекТМЦ = СписокТМЦ.ПолучитьЗначение(СписокТМЦ.ТекущаяСтрока());
		
		ГМ.УдалитьСоответсвие_Номенклатура_Продукция_Элемент( ТекТМЦ, ТекущийЭлемент() );

		СписокТМЦ.УдалитьЗначение(СписокТМЦ.ТекущаяСтрока());
	КонецЕсли;
	
КонецПроцедуры // кнУдалитьВыбор()

//******************************************************************************
Процедура кнУдалитьВсеВыбор()
	Если СписокТМЦ.ТекущаяСтрока() > 0 Тогда
		Если Вопрос("Удалить все строки?","Да+Нет",10) = "Да" Тогда 
			Спр = СоздатьОбъект("Справочник.ВСД_Номенклатура_Соответсвия");
			Для СЦ = 1 По СписокТМЦ.РазмерСписка() Цикл
				ТекТМЦ = СписокТМЦ.ПолучитьЗначение(СЦ);
				
				ГМ.УдалитьСоответсвие_Номенклатура_Продукция_Элемент( ТекТМЦ, ТекущийЭлемент() );
			КонецЦикла;

			СписокТМЦ.УдалитьВсе();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // кнУдалитьВсеВыбор()

//******************************************************************************
Процедура ОбработкаПодбора(ВыбЗнач)
	Перем Стр;
	Если СписокТМЦ.НайтиЗначение(ВыбЗнач) <> 0 Тогда
		Предупреждение("Данный элемент уже выбран.",20); Возврат;
	Иначе
		ГМ.УстановитьСоответсвие_Номенклатура_Продукция_Элемент( ВыбЗнач, ТекущийЭлемент() );
		
		СписокТМЦ.ДобавитьЗначение(ВыбЗнач);
		СписокТМЦ.ТекущаяСтрока(СписокТМЦ.РазмерСписка());
	КонецЕсли;
КонецПроцедуры // ОбработкаПодбора()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриОткрытии()
	ГМ._ПриОткрытии(Контекст);

	Форма.Закладки.ТекущаяСтрока(1);
	Форма.ИспользоватьСлой(Форма.Закладки.ПолучитьЗначение(1), 2);

	Если Форма.МодальныйРежим() = 0 Тогда
		Попытка
			
			оПривязки.Привязка("СписокТМЦ", "H", "Форма", "W", "Форма");
			оПривязки.Привязка("кнПодбор,кнУдалить,кнУдалитьВсе", "T", "Форма", "L", "Форма");
			оПривязки.Привязка("кнОК,кнЗаписать,кнЗакрыть,кнГИС","T","Форма");
		Исключение
			Сообщить("Справочник ВСД_Продукция_Элемент - Не удалось инициализировать привязки");
		КонецПопытки;
	КонецЕсли;

	ПриИзмененииСкоропорт();
	
КонецПроцедуры


Процедура ПослеОткрытия()
	ГМ._ПослеОткрытия(Контекст);
	
	Если Выбран() = 1 Тогда
		// Закладка ассортимент     
		тз = ГМ.ПолучитьСписок_Номенклатура_По_ВСД_Продукция_Элемент( ТекущийЭлемент() );
		
		ТЗ.Выгрузить(СписокТМЦ);
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	ГМ._ПриИзмененииРазмераОкна(Контекст, ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	Форма.ИспользоватьСлой(ЗначениеЗакладки, 2); 
КонецПроцедуры 


//======================================================================
Процедура ВводНового()
	ТермическиеУсловияПеревозки = 1;
КонецПроцедуры 

//======================================================================
Процедура ОперацииГИС()
	//меню
	СписокДействийВСД = СоздатьОбъект("СписокЗначений");
	СписокДействийВСД.ДобавитьЗначение("Создать","Создать в ГИС");
	СписокДействийВСД.ДобавитьЗначение("Изменить","Изменить в ГИС");
	СписокДействийВСД.ДобавитьЗначение("Обновить","Обновить из ГИС");
	СписокДействийВСД.ДобавитьЗначение("Удалить","Удалить в ГИС");
			
	стр=0; Зн="";
	Если СписокДействийВСД.ВыбратьЗначение(Зн, "", стр, 60, 1) = 1 Тогда
		
		Записать();
		
		//ГМ.Инициализация(Контекст);    Инициализировано в ПриОткрытии
			
		Если Зн ="Создать"  Тогда 
			Создать();
		ИначеЕсли Зн = "Изменить" Тогда 
			Изменить();
		ИначеЕсли Зн = "Обновить" Тогда 
			ОбновитьИзМеркурий();
		ИначеЕсли Зн = "Удалить" Тогда
			Если ПометкаУдаления()=1 Тогда 
				Возврат;
			КонецЕсли;
			Если ПустоеЗначение(GUID)=0 Тогда 
				Если Вопрос("Запрос уже был отправлен, отправить ПОВТОРНО?",4,30)<>6 Тогда 
					Возврат;
				КонецЕсли;
			КонецЕсли;
		   	ПараПараметров = СоздатьОбъект("СписокЗначений");
		   	ПараПараметров.Установить("Контекст", Контекст);
		   	ПараПараметров.Установить("Операция", "DELETE");		
  			ОткрытьФорму("Отчет", ПараПараметров, ГМ.ПолучитьКонстанту("КаталогМодуля")+"ВСД_ОтправкаИзФормы_Справочник.ert");		
	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


//======================================================================
Форма.ИспользоватьЗакладки(1);
Форма.Закладки.ДобавитьЗначение("Основной, Кнопки", "Основные сведения");
Форма.Закладки.ДобавитьЗначение("ТМЦ, Кнопки", "Номенклатура");

